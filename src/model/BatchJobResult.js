/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchJobResultItem from './BatchJobResultItem';

/**
 * The BatchJobResult model module.
 * @module model/BatchJobResult
 * @version 1.1
 */
class BatchJobResult {
    /**
     * Constructs a new <code>BatchJobResult</code>.
     * @alias module:model/BatchJobResult
     */
    constructor() { 
        
        BatchJobResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchJobResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchJobResult} obj Optional instance to populate.
     * @return {module:model/BatchJobResult} The populated <code>BatchJobResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchJobResult();

            if (data.hasOwnProperty('job_id')) {
                obj['job_id'] = ApiClient.convertToType(data['job_id'], 'Number');
            }
            if (data.hasOwnProperty('job_name')) {
                obj['job_name'] = ApiClient.convertToType(data['job_name'], 'String');
            }
            if (data.hasOwnProperty('items_processed')) {
                obj['items_processed'] = ApiClient.convertToType(data['items_processed'], 'Number');
            }
            if (data.hasOwnProperty('items_succeed')) {
                obj['items_succeed'] = ApiClient.convertToType(data['items_succeed'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [BatchJobResultItem]);
            }
            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchJobResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchJobResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['job_name'] && !(typeof data['job_name'] === 'string' || data['job_name'] instanceof String)) {
            throw new Error("Expected the field `job_name` to be a primitive type in the JSON string but got " + data['job_name']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                BatchJobResultItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} job_id
 */
BatchJobResult.prototype['job_id'] = undefined;

/**
 * @member {String} job_name
 */
BatchJobResult.prototype['job_name'] = undefined;

/**
 * @member {Number} items_processed
 */
BatchJobResult.prototype['items_processed'] = undefined;

/**
 * @member {Number} items_succeed
 */
BatchJobResult.prototype['items_succeed'] = undefined;

/**
 * @member {Array.<module:model/BatchJobResultItem>} items
 */
BatchJobResult.prototype['items'] = undefined;

/**
 * @member {Object} additional_fields
 */
BatchJobResult.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
BatchJobResult.prototype['custom_fields'] = undefined;






export default BatchJobResult;

