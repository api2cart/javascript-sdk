/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductAddManufacturerInfo from './ProductAddManufacturerInfo';
import ProductAddPackageDetails from './ProductAddPackageDetails';
import ProductAddPersonalizationDetails from './ProductAddPersonalizationDetails';
import ProductAddSpecificsInner from './ProductAddSpecificsInner';
import ProductAddTierPricesInner from './ProductAddTierPricesInner';

/**
 * The ProductUpdate model module.
 * @module model/ProductUpdate
 * @version 1.1
 */
class ProductUpdate {
    /**
     * Constructs a new <code>ProductUpdate</code>.
     * @alias module:model/ProductUpdate
     */
    constructor() { 
        
        ProductUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['taxable'] = true;
        obj['avail'] = true;
        obj['is_virtual'] = false;
        obj['shipping_template_id'] = 0;
        obj['when_made'] = 'made_to_order';
        obj['is_supply'] = true;
        obj['downloadable'] = false;
        obj['auto_renew'] = false;
        obj['on_sale'] = false;
        obj['disable_report_cache'] = false;
        obj['reindex'] = true;
        obj['clear_cache'] = true;
        obj['check_process_status'] = false;
    }

    /**
     * Constructs a <code>ProductUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductUpdate} obj Optional instance to populate.
     * @return {module:model/ProductUpdate} The populated <code>ProductUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductUpdate();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('short_description')) {
                obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('old_price')) {
                obj['old_price'] = ApiClient.convertToType(data['old_price'], 'Number');
            }
            if (data.hasOwnProperty('special_price')) {
                obj['special_price'] = ApiClient.convertToType(data['special_price'], 'Number');
            }
            if (data.hasOwnProperty('sprice_create')) {
                obj['sprice_create'] = ApiClient.convertToType(data['sprice_create'], 'String');
            }
            if (data.hasOwnProperty('sprice_expire')) {
                obj['sprice_expire'] = ApiClient.convertToType(data['sprice_expire'], 'String');
            }
            if (data.hasOwnProperty('cost_price')) {
                obj['cost_price'] = ApiClient.convertToType(data['cost_price'], 'Number');
            }
            if (data.hasOwnProperty('fixed_cost_shipping_price')) {
                obj['fixed_cost_shipping_price'] = ApiClient.convertToType(data['fixed_cost_shipping_price'], 'Number');
            }
            if (data.hasOwnProperty('retail_price')) {
                obj['retail_price'] = ApiClient.convertToType(data['retail_price'], 'Number');
            }
            if (data.hasOwnProperty('tier_prices')) {
                obj['tier_prices'] = ApiClient.convertToType(data['tier_prices'], [ProductAddTierPricesInner]);
            }
            if (data.hasOwnProperty('reserve_price')) {
                obj['reserve_price'] = ApiClient.convertToType(data['reserve_price'], 'Number');
            }
            if (data.hasOwnProperty('buyitnow_price')) {
                obj['buyitnow_price'] = ApiClient.convertToType(data['buyitnow_price'], 'Number');
            }
            if (data.hasOwnProperty('taxable')) {
                obj['taxable'] = ApiClient.convertToType(data['taxable'], 'Boolean');
            }
            if (data.hasOwnProperty('tax_class_id')) {
                obj['tax_class_id'] = ApiClient.convertToType(data['tax_class_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'String');
            }
            if (data.hasOwnProperty('in_stock')) {
                obj['in_stock'] = ApiClient.convertToType(data['in_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('avail')) {
                obj['avail'] = ApiClient.convertToType(data['avail'], 'Boolean');
            }
            if (data.hasOwnProperty('avail_from')) {
                obj['avail_from'] = ApiClient.convertToType(data['avail_from'], 'String');
            }
            if (data.hasOwnProperty('product_class')) {
                obj['product_class'] = ApiClient.convertToType(data['product_class'], 'String');
            }
            if (data.hasOwnProperty('available_for_view')) {
                obj['available_for_view'] = ApiClient.convertToType(data['available_for_view'], 'Boolean');
            }
            if (data.hasOwnProperty('stores_ids')) {
                obj['stores_ids'] = ApiClient.convertToType(data['stores_ids'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'String');
            }
            if (data.hasOwnProperty('lang_id')) {
                obj['lang_id'] = ApiClient.convertToType(data['lang_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('reserve_quantity')) {
                obj['reserve_quantity'] = ApiClient.convertToType(data['reserve_quantity'], 'Number');
            }
            if (data.hasOwnProperty('manage_stock')) {
                obj['manage_stock'] = ApiClient.convertToType(data['manage_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('backorder_status')) {
                obj['backorder_status'] = ApiClient.convertToType(data['backorder_status'], 'String');
            }
            if (data.hasOwnProperty('increase_quantity')) {
                obj['increase_quantity'] = ApiClient.convertToType(data['increase_quantity'], 'Number');
            }
            if (data.hasOwnProperty('reduce_quantity')) {
                obj['reduce_quantity'] = ApiClient.convertToType(data['reduce_quantity'], 'Number');
            }
            if (data.hasOwnProperty('low_stock_threshold')) {
                obj['low_stock_threshold'] = ApiClient.convertToType(data['low_stock_threshold'], 'Number');
            }
            if (data.hasOwnProperty('warehouse_id')) {
                obj['warehouse_id'] = ApiClient.convertToType(data['warehouse_id'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('weight_unit')) {
                obj['weight_unit'] = ApiClient.convertToType(data['weight_unit'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('dimensions_unit')) {
                obj['dimensions_unit'] = ApiClient.convertToType(data['dimensions_unit'], 'String');
            }
            if (data.hasOwnProperty('is_virtual')) {
                obj['is_virtual'] = ApiClient.convertToType(data['is_virtual'], 'Boolean');
            }
            if (data.hasOwnProperty('is_free_shipping')) {
                obj['is_free_shipping'] = ApiClient.convertToType(data['is_free_shipping'], 'Boolean');
            }
            if (data.hasOwnProperty('gtin')) {
                obj['gtin'] = ApiClient.convertToType(data['gtin'], 'String');
            }
            if (data.hasOwnProperty('upc')) {
                obj['upc'] = ApiClient.convertToType(data['upc'], 'String');
            }
            if (data.hasOwnProperty('mpn')) {
                obj['mpn'] = ApiClient.convertToType(data['mpn'], 'String');
            }
            if (data.hasOwnProperty('ean')) {
                obj['ean'] = ApiClient.convertToType(data['ean'], 'String');
            }
            if (data.hasOwnProperty('isbn')) {
                obj['isbn'] = ApiClient.convertToType(data['isbn'], 'String');
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('manufacturer_id')) {
                obj['manufacturer_id'] = ApiClient.convertToType(data['manufacturer_id'], 'String');
            }
            if (data.hasOwnProperty('categories_ids')) {
                obj['categories_ids'] = ApiClient.convertToType(data['categories_ids'], 'String');
            }
            if (data.hasOwnProperty('related_products_ids')) {
                obj['related_products_ids'] = ApiClient.convertToType(data['related_products_ids'], 'String');
            }
            if (data.hasOwnProperty('up_sell_products_ids')) {
                obj['up_sell_products_ids'] = ApiClient.convertToType(data['up_sell_products_ids'], 'String');
            }
            if (data.hasOwnProperty('cross_sell_products_ids')) {
                obj['cross_sell_products_ids'] = ApiClient.convertToType(data['cross_sell_products_ids'], 'String');
            }
            if (data.hasOwnProperty('meta_title')) {
                obj['meta_title'] = ApiClient.convertToType(data['meta_title'], 'String');
            }
            if (data.hasOwnProperty('meta_keywords')) {
                obj['meta_keywords'] = ApiClient.convertToType(data['meta_keywords'], 'String');
            }
            if (data.hasOwnProperty('meta_description')) {
                obj['meta_description'] = ApiClient.convertToType(data['meta_description'], 'String');
            }
            if (data.hasOwnProperty('seo_url')) {
                obj['seo_url'] = ApiClient.convertToType(data['seo_url'], 'String');
            }
            if (data.hasOwnProperty('search_keywords')) {
                obj['search_keywords'] = ApiClient.convertToType(data['search_keywords'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], 'String');
            }
            if (data.hasOwnProperty('delivery_code')) {
                obj['delivery_code'] = ApiClient.convertToType(data['delivery_code'], 'String');
            }
            if (data.hasOwnProperty('package_details')) {
                obj['package_details'] = ProductAddPackageDetails.constructFromObject(data['package_details']);
            }
            if (data.hasOwnProperty('country_of_origin')) {
                obj['country_of_origin'] = ApiClient.convertToType(data['country_of_origin'], 'String');
            }
            if (data.hasOwnProperty('harmonized_system_code')) {
                obj['harmonized_system_code'] = ApiClient.convertToType(data['harmonized_system_code'], 'String');
            }
            if (data.hasOwnProperty('shipping_template_id')) {
                obj['shipping_template_id'] = ApiClient.convertToType(data['shipping_template_id'], 'Number');
            }
            if (data.hasOwnProperty('when_made')) {
                obj['when_made'] = ApiClient.convertToType(data['when_made'], 'String');
            }
            if (data.hasOwnProperty('is_supply')) {
                obj['is_supply'] = ApiClient.convertToType(data['is_supply'], 'Boolean');
            }
            if (data.hasOwnProperty('downloadable')) {
                obj['downloadable'] = ApiClient.convertToType(data['downloadable'], 'Boolean');
            }
            if (data.hasOwnProperty('materials')) {
                obj['materials'] = ApiClient.convertToType(data['materials'], ['String']);
            }
            if (data.hasOwnProperty('auto_renew')) {
                obj['auto_renew'] = ApiClient.convertToType(data['auto_renew'], 'Boolean');
            }
            if (data.hasOwnProperty('on_sale')) {
                obj['on_sale'] = ApiClient.convertToType(data['on_sale'], 'Boolean');
            }
            if (data.hasOwnProperty('production_partner_ids')) {
                obj['production_partner_ids'] = ApiClient.convertToType(data['production_partner_ids'], 'String');
            }
            if (data.hasOwnProperty('manufacturer_info')) {
                obj['manufacturer_info'] = ProductAddManufacturerInfo.constructFromObject(data['manufacturer_info']);
            }
            if (data.hasOwnProperty('report_request_id')) {
                obj['report_request_id'] = ApiClient.convertToType(data['report_request_id'], 'String');
            }
            if (data.hasOwnProperty('disable_report_cache')) {
                obj['disable_report_cache'] = ApiClient.convertToType(data['disable_report_cache'], 'Boolean');
            }
            if (data.hasOwnProperty('reindex')) {
                obj['reindex'] = ApiClient.convertToType(data['reindex'], 'Boolean');
            }
            if (data.hasOwnProperty('clear_cache')) {
                obj['clear_cache'] = ApiClient.convertToType(data['clear_cache'], 'Boolean');
            }
            if (data.hasOwnProperty('check_process_status')) {
                obj['check_process_status'] = ApiClient.convertToType(data['check_process_status'], 'Boolean');
            }
            if (data.hasOwnProperty('specifics')) {
                obj['specifics'] = ApiClient.convertToType(data['specifics'], [ProductAddSpecificsInner]);
            }
            if (data.hasOwnProperty('shop_section_id')) {
                obj['shop_section_id'] = ApiClient.convertToType(data['shop_section_id'], 'Number');
            }
            if (data.hasOwnProperty('personalization_details')) {
                obj['personalization_details'] = ProductAddPersonalizationDetails.constructFromObject(data['personalization_details']);
            }
            if (data.hasOwnProperty('external_product_link')) {
                obj['external_product_link'] = ApiClient.convertToType(data['external_product_link'], 'String');
            }
            if (data.hasOwnProperty('marketplace_item_properties')) {
                obj['marketplace_item_properties'] = ApiClient.convertToType(data['marketplace_item_properties'], 'String');
            }
            if (data.hasOwnProperty('min_order_quantity')) {
                obj['min_order_quantity'] = ApiClient.convertToType(data['min_order_quantity'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['short_description'] && !(typeof data['short_description'] === 'string' || data['short_description'] instanceof String)) {
            throw new Error("Expected the field `short_description` to be a primitive type in the JSON string but got " + data['short_description']);
        }
        // ensure the json data is a string
        if (data['sprice_create'] && !(typeof data['sprice_create'] === 'string' || data['sprice_create'] instanceof String)) {
            throw new Error("Expected the field `sprice_create` to be a primitive type in the JSON string but got " + data['sprice_create']);
        }
        // ensure the json data is a string
        if (data['sprice_expire'] && !(typeof data['sprice_expire'] === 'string' || data['sprice_expire'] instanceof String)) {
            throw new Error("Expected the field `sprice_expire` to be a primitive type in the JSON string but got " + data['sprice_expire']);
        }
        if (data['tier_prices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tier_prices'])) {
                throw new Error("Expected the field `tier_prices` to be an array in the JSON data but got " + data['tier_prices']);
            }
            // validate the optional field `tier_prices` (array)
            for (const item of data['tier_prices']) {
                ProductAddTierPricesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['tax_class_id'] && !(typeof data['tax_class_id'] === 'string' || data['tax_class_id'] instanceof String)) {
            throw new Error("Expected the field `tax_class_id` to be a primitive type in the JSON string but got " + data['tax_class_id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['visible'] && !(typeof data['visible'] === 'string' || data['visible'] instanceof String)) {
            throw new Error("Expected the field `visible` to be a primitive type in the JSON string but got " + data['visible']);
        }
        // ensure the json data is a string
        if (data['avail_from'] && !(typeof data['avail_from'] === 'string' || data['avail_from'] instanceof String)) {
            throw new Error("Expected the field `avail_from` to be a primitive type in the JSON string but got " + data['avail_from']);
        }
        // ensure the json data is a string
        if (data['product_class'] && !(typeof data['product_class'] === 'string' || data['product_class'] instanceof String)) {
            throw new Error("Expected the field `product_class` to be a primitive type in the JSON string but got " + data['product_class']);
        }
        // ensure the json data is a string
        if (data['stores_ids'] && !(typeof data['stores_ids'] === 'string' || data['stores_ids'] instanceof String)) {
            throw new Error("Expected the field `stores_ids` to be a primitive type in the JSON string but got " + data['stores_ids']);
        }
        // ensure the json data is a string
        if (data['store_id'] && !(typeof data['store_id'] === 'string' || data['store_id'] instanceof String)) {
            throw new Error("Expected the field `store_id` to be a primitive type in the JSON string but got " + data['store_id']);
        }
        // ensure the json data is a string
        if (data['lang_id'] && !(typeof data['lang_id'] === 'string' || data['lang_id'] instanceof String)) {
            throw new Error("Expected the field `lang_id` to be a primitive type in the JSON string but got " + data['lang_id']);
        }
        // ensure the json data is a string
        if (data['backorder_status'] && !(typeof data['backorder_status'] === 'string' || data['backorder_status'] instanceof String)) {
            throw new Error("Expected the field `backorder_status` to be a primitive type in the JSON string but got " + data['backorder_status']);
        }
        // ensure the json data is a string
        if (data['warehouse_id'] && !(typeof data['warehouse_id'] === 'string' || data['warehouse_id'] instanceof String)) {
            throw new Error("Expected the field `warehouse_id` to be a primitive type in the JSON string but got " + data['warehouse_id']);
        }
        // ensure the json data is a string
        if (data['weight_unit'] && !(typeof data['weight_unit'] === 'string' || data['weight_unit'] instanceof String)) {
            throw new Error("Expected the field `weight_unit` to be a primitive type in the JSON string but got " + data['weight_unit']);
        }
        // ensure the json data is a string
        if (data['dimensions_unit'] && !(typeof data['dimensions_unit'] === 'string' || data['dimensions_unit'] instanceof String)) {
            throw new Error("Expected the field `dimensions_unit` to be a primitive type in the JSON string but got " + data['dimensions_unit']);
        }
        // ensure the json data is a string
        if (data['gtin'] && !(typeof data['gtin'] === 'string' || data['gtin'] instanceof String)) {
            throw new Error("Expected the field `gtin` to be a primitive type in the JSON string but got " + data['gtin']);
        }
        // ensure the json data is a string
        if (data['upc'] && !(typeof data['upc'] === 'string' || data['upc'] instanceof String)) {
            throw new Error("Expected the field `upc` to be a primitive type in the JSON string but got " + data['upc']);
        }
        // ensure the json data is a string
        if (data['mpn'] && !(typeof data['mpn'] === 'string' || data['mpn'] instanceof String)) {
            throw new Error("Expected the field `mpn` to be a primitive type in the JSON string but got " + data['mpn']);
        }
        // ensure the json data is a string
        if (data['ean'] && !(typeof data['ean'] === 'string' || data['ean'] instanceof String)) {
            throw new Error("Expected the field `ean` to be a primitive type in the JSON string but got " + data['ean']);
        }
        // ensure the json data is a string
        if (data['isbn'] && !(typeof data['isbn'] === 'string' || data['isbn'] instanceof String)) {
            throw new Error("Expected the field `isbn` to be a primitive type in the JSON string but got " + data['isbn']);
        }
        // ensure the json data is a string
        if (data['barcode'] && !(typeof data['barcode'] === 'string' || data['barcode'] instanceof String)) {
            throw new Error("Expected the field `barcode` to be a primitive type in the JSON string but got " + data['barcode']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['manufacturer_id'] && !(typeof data['manufacturer_id'] === 'string' || data['manufacturer_id'] instanceof String)) {
            throw new Error("Expected the field `manufacturer_id` to be a primitive type in the JSON string but got " + data['manufacturer_id']);
        }
        // ensure the json data is a string
        if (data['categories_ids'] && !(typeof data['categories_ids'] === 'string' || data['categories_ids'] instanceof String)) {
            throw new Error("Expected the field `categories_ids` to be a primitive type in the JSON string but got " + data['categories_ids']);
        }
        // ensure the json data is a string
        if (data['related_products_ids'] && !(typeof data['related_products_ids'] === 'string' || data['related_products_ids'] instanceof String)) {
            throw new Error("Expected the field `related_products_ids` to be a primitive type in the JSON string but got " + data['related_products_ids']);
        }
        // ensure the json data is a string
        if (data['up_sell_products_ids'] && !(typeof data['up_sell_products_ids'] === 'string' || data['up_sell_products_ids'] instanceof String)) {
            throw new Error("Expected the field `up_sell_products_ids` to be a primitive type in the JSON string but got " + data['up_sell_products_ids']);
        }
        // ensure the json data is a string
        if (data['cross_sell_products_ids'] && !(typeof data['cross_sell_products_ids'] === 'string' || data['cross_sell_products_ids'] instanceof String)) {
            throw new Error("Expected the field `cross_sell_products_ids` to be a primitive type in the JSON string but got " + data['cross_sell_products_ids']);
        }
        // ensure the json data is a string
        if (data['meta_title'] && !(typeof data['meta_title'] === 'string' || data['meta_title'] instanceof String)) {
            throw new Error("Expected the field `meta_title` to be a primitive type in the JSON string but got " + data['meta_title']);
        }
        // ensure the json data is a string
        if (data['meta_keywords'] && !(typeof data['meta_keywords'] === 'string' || data['meta_keywords'] instanceof String)) {
            throw new Error("Expected the field `meta_keywords` to be a primitive type in the JSON string but got " + data['meta_keywords']);
        }
        // ensure the json data is a string
        if (data['meta_description'] && !(typeof data['meta_description'] === 'string' || data['meta_description'] instanceof String)) {
            throw new Error("Expected the field `meta_description` to be a primitive type in the JSON string but got " + data['meta_description']);
        }
        // ensure the json data is a string
        if (data['seo_url'] && !(typeof data['seo_url'] === 'string' || data['seo_url'] instanceof String)) {
            throw new Error("Expected the field `seo_url` to be a primitive type in the JSON string but got " + data['seo_url']);
        }
        // ensure the json data is a string
        if (data['search_keywords'] && !(typeof data['search_keywords'] === 'string' || data['search_keywords'] instanceof String)) {
            throw new Error("Expected the field `search_keywords` to be a primitive type in the JSON string but got " + data['search_keywords']);
        }
        // ensure the json data is a string
        if (data['tags'] && !(typeof data['tags'] === 'string' || data['tags'] instanceof String)) {
            throw new Error("Expected the field `tags` to be a primitive type in the JSON string but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['delivery_code'] && !(typeof data['delivery_code'] === 'string' || data['delivery_code'] instanceof String)) {
            throw new Error("Expected the field `delivery_code` to be a primitive type in the JSON string but got " + data['delivery_code']);
        }
        // validate the optional field `package_details`
        if (data['package_details']) { // data not null
          ProductAddPackageDetails.validateJSON(data['package_details']);
        }
        // ensure the json data is a string
        if (data['country_of_origin'] && !(typeof data['country_of_origin'] === 'string' || data['country_of_origin'] instanceof String)) {
            throw new Error("Expected the field `country_of_origin` to be a primitive type in the JSON string but got " + data['country_of_origin']);
        }
        // ensure the json data is a string
        if (data['harmonized_system_code'] && !(typeof data['harmonized_system_code'] === 'string' || data['harmonized_system_code'] instanceof String)) {
            throw new Error("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got " + data['harmonized_system_code']);
        }
        // ensure the json data is a string
        if (data['when_made'] && !(typeof data['when_made'] === 'string' || data['when_made'] instanceof String)) {
            throw new Error("Expected the field `when_made` to be a primitive type in the JSON string but got " + data['when_made']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['materials'])) {
            throw new Error("Expected the field `materials` to be an array in the JSON data but got " + data['materials']);
        }
        // ensure the json data is a string
        if (data['production_partner_ids'] && !(typeof data['production_partner_ids'] === 'string' || data['production_partner_ids'] instanceof String)) {
            throw new Error("Expected the field `production_partner_ids` to be a primitive type in the JSON string but got " + data['production_partner_ids']);
        }
        // validate the optional field `manufacturer_info`
        if (data['manufacturer_info']) { // data not null
          ProductAddManufacturerInfo.validateJSON(data['manufacturer_info']);
        }
        // ensure the json data is a string
        if (data['report_request_id'] && !(typeof data['report_request_id'] === 'string' || data['report_request_id'] instanceof String)) {
            throw new Error("Expected the field `report_request_id` to be a primitive type in the JSON string but got " + data['report_request_id']);
        }
        if (data['specifics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['specifics'])) {
                throw new Error("Expected the field `specifics` to be an array in the JSON data but got " + data['specifics']);
            }
            // validate the optional field `specifics` (array)
            for (const item of data['specifics']) {
                ProductAddSpecificsInner.validateJSON(item);
            };
        }
        // validate the optional field `personalization_details`
        if (data['personalization_details']) { // data not null
          ProductAddPersonalizationDetails.validateJSON(data['personalization_details']);
        }
        // ensure the json data is a string
        if (data['external_product_link'] && !(typeof data['external_product_link'] === 'string' || data['external_product_link'] instanceof String)) {
            throw new Error("Expected the field `external_product_link` to be a primitive type in the JSON string but got " + data['external_product_link']);
        }
        // ensure the json data is a string
        if (data['marketplace_item_properties'] && !(typeof data['marketplace_item_properties'] === 'string' || data['marketplace_item_properties'] instanceof String)) {
            throw new Error("Expected the field `marketplace_item_properties` to be a primitive type in the JSON string but got " + data['marketplace_item_properties']);
        }

        return true;
    }


}



/**
 * Defines product id that has to be updated
 * @member {String} id
 */
ProductUpdate.prototype['id'] = undefined;

/**
 * Defines product model that has to be updated
 * @member {String} model
 */
ProductUpdate.prototype['model'] = undefined;

/**
 * Defines new product's sku
 * @member {String} sku
 */
ProductUpdate.prototype['sku'] = undefined;

/**
 * Defines product's name that has to be updated
 * @member {String} name
 */
ProductUpdate.prototype['name'] = undefined;

/**
 * Defines new product's description
 * @member {String} description
 */
ProductUpdate.prototype['description'] = undefined;

/**
 * Defines short description
 * @member {String} short_description
 */
ProductUpdate.prototype['short_description'] = undefined;

/**
 * Defines new product's price
 * @member {Number} price
 */
ProductUpdate.prototype['price'] = undefined;

/**
 * Defines product's old price
 * @member {Number} old_price
 */
ProductUpdate.prototype['old_price'] = undefined;

/**
 * Defines new product's special price
 * @member {Number} special_price
 */
ProductUpdate.prototype['special_price'] = undefined;

/**
 * Defines the date of special price creation
 * @member {String} sprice_create
 */
ProductUpdate.prototype['sprice_create'] = undefined;

/**
 * Defines the term of special price offer duration
 * @member {String} sprice_expire
 */
ProductUpdate.prototype['sprice_expire'] = undefined;

/**
 * Defines new product's cost price
 * @member {Number} cost_price
 */
ProductUpdate.prototype['cost_price'] = undefined;

/**
 * Specifies product's fixed cost shipping price
 * @member {Number} fixed_cost_shipping_price
 */
ProductUpdate.prototype['fixed_cost_shipping_price'] = undefined;

/**
 * Defines new product's retail price
 * @member {Number} retail_price
 */
ProductUpdate.prototype['retail_price'] = undefined;

/**
 * Defines product's tier prices
 * @member {Array.<module:model/ProductAddTierPricesInner>} tier_prices
 */
ProductUpdate.prototype['tier_prices'] = undefined;

/**
 * Defines reserve price value
 * @member {Number} reserve_price
 */
ProductUpdate.prototype['reserve_price'] = undefined;

/**
 * Defines buy it now value
 * @member {Number} buyitnow_price
 */
ProductUpdate.prototype['buyitnow_price'] = undefined;

/**
 * Specifies whether a tax is charged
 * @member {Boolean} taxable
 * @default true
 */
ProductUpdate.prototype['taxable'] = true;

/**
 * Defines tax classes where entity has to be added
 * @member {String} tax_class_id
 */
ProductUpdate.prototype['tax_class_id'] = undefined;

/**
 * Defines product's type
 * @member {String} type
 */
ProductUpdate.prototype['type'] = undefined;

/**
 * Defines product's status
 * @member {String} status
 */
ProductUpdate.prototype['status'] = undefined;

/**
 * The human-readable label for the condition (e.g., \"New\").
 * @member {String} condition
 */
ProductUpdate.prototype['condition'] = undefined;

/**
 * Set visibility status
 * @member {String} visible
 */
ProductUpdate.prototype['visible'] = undefined;

/**
 * Set stock status
 * @member {Boolean} in_stock
 */
ProductUpdate.prototype['in_stock'] = undefined;

/**
 * Defines category's visibility status
 * @member {Boolean} avail
 * @default true
 */
ProductUpdate.prototype['avail'] = true;

/**
 * Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.
 * @member {String} avail_from
 */
ProductUpdate.prototype['avail_from'] = undefined;

/**
 * A categorization for the product
 * @member {String} product_class
 */
ProductUpdate.prototype['product_class'] = undefined;

/**
 * Specifies the set of visible/invisible products for users
 * @member {Boolean} available_for_view
 */
ProductUpdate.prototype['available_for_view'] = undefined;

/**
 * Assign product to the stores that is specified by comma-separated stores' id
 * @member {String} stores_ids
 */
ProductUpdate.prototype['stores_ids'] = undefined;

/**
 * Defines store id where the product should be found
 * @member {String} store_id
 */
ProductUpdate.prototype['store_id'] = undefined;

/**
 * Language id
 * @member {String} lang_id
 */
ProductUpdate.prototype['lang_id'] = undefined;

/**
 * Defines new product's quantity
 * @member {Number} quantity
 */
ProductUpdate.prototype['quantity'] = undefined;

/**
 * This parameter allows to reserve/unreserve product quantity.
 * @member {Number} reserve_quantity
 */
ProductUpdate.prototype['reserve_quantity'] = undefined;

/**
 * Defines inventory tracking for product
 * @member {Boolean} manage_stock
 */
ProductUpdate.prototype['manage_stock'] = undefined;

/**
 * Set backorder status
 * @member {String} backorder_status
 */
ProductUpdate.prototype['backorder_status'] = undefined;

/**
 * Defines the incremental changes in product quantity
 * @member {Number} increase_quantity
 */
ProductUpdate.prototype['increase_quantity'] = undefined;

/**
 * Defines the decrement changes in product quantity
 * @member {Number} reduce_quantity
 */
ProductUpdate.prototype['reduce_quantity'] = undefined;

/**
 * Specify the quantity threshold below which the product is considered low in stock
 * @member {Number} low_stock_threshold
 */
ProductUpdate.prototype['low_stock_threshold'] = undefined;

/**
 * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
 * @member {String} warehouse_id
 */
ProductUpdate.prototype['warehouse_id'] = undefined;

/**
 * Weight
 * @member {Number} weight
 */
ProductUpdate.prototype['weight'] = undefined;

/**
 * Weight Unit
 * @member {String} weight_unit
 */
ProductUpdate.prototype['weight_unit'] = undefined;

/**
 * Defines product's height
 * @member {Number} height
 */
ProductUpdate.prototype['height'] = undefined;

/**
 * Defines product's length
 * @member {Number} length
 */
ProductUpdate.prototype['length'] = undefined;

/**
 * Defines product's width
 * @member {Number} width
 */
ProductUpdate.prototype['width'] = undefined;

/**
 * Weight Unit
 * @member {String} dimensions_unit
 */
ProductUpdate.prototype['dimensions_unit'] = undefined;

/**
 * Defines whether the product is virtual
 * @member {Boolean} is_virtual
 * @default false
 */
ProductUpdate.prototype['is_virtual'] = false;

/**
 * Specifies product free shipping flag that has to be updated
 * @member {Boolean} is_free_shipping
 */
ProductUpdate.prototype['is_free_shipping'] = undefined;

/**
 * Global Trade Item Number. An GTIN is an identifier for trade items.
 * @member {String} gtin
 */
ProductUpdate.prototype['gtin'] = undefined;

/**
 * Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
 * @member {String} upc
 */
ProductUpdate.prototype['upc'] = undefined;

/**
 * Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
 * @member {String} mpn
 */
ProductUpdate.prototype['mpn'] = undefined;

/**
 * European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
 * @member {String} ean
 */
ProductUpdate.prototype['ean'] = undefined;

/**
 * International Standard Book Number. An ISBN is a unique identifier for books.
 * @member {String} isbn
 */
ProductUpdate.prototype['isbn'] = undefined;

/**
 * A barcode is a unique code composed of numbers used as a product identifier.
 * @member {String} barcode
 */
ProductUpdate.prototype['barcode'] = undefined;

/**
 * Defines product's manufacturer
 * @member {String} manufacturer
 */
ProductUpdate.prototype['manufacturer'] = undefined;

/**
 * Defines product's manufacturer by manufacturer_id
 * @member {String} manufacturer_id
 */
ProductUpdate.prototype['manufacturer_id'] = undefined;

/**
 * Defines product add that is specified by comma-separated categories id
 * @member {String} categories_ids
 */
ProductUpdate.prototype['categories_ids'] = undefined;

/**
 * Defines product related products ids that has to be updated
 * @member {String} related_products_ids
 */
ProductUpdate.prototype['related_products_ids'] = undefined;

/**
 * Defines product up-sell products ids that has to be updated
 * @member {String} up_sell_products_ids
 */
ProductUpdate.prototype['up_sell_products_ids'] = undefined;

/**
 * Defines product cross-sells products ids that has to be updated
 * @member {String} cross_sell_products_ids
 */
ProductUpdate.prototype['cross_sell_products_ids'] = undefined;

/**
 * Defines unique meta title for each entity
 * @member {String} meta_title
 */
ProductUpdate.prototype['meta_title'] = undefined;

/**
 * Defines unique meta keywords for each entity
 * @member {String} meta_keywords
 */
ProductUpdate.prototype['meta_keywords'] = undefined;

/**
 * Defines unique meta description of a entity
 * @member {String} meta_description
 */
ProductUpdate.prototype['meta_description'] = undefined;

/**
 * Defines unique URL for SEO
 * @member {String} seo_url
 */
ProductUpdate.prototype['seo_url'] = undefined;

/**
 * Defines unique search keywords
 * @member {String} search_keywords
 */
ProductUpdate.prototype['search_keywords'] = undefined;

/**
 * Product tags
 * @member {String} tags
 */
ProductUpdate.prototype['tags'] = undefined;

/**
 * The delivery promise that applies to offer
 * @member {String} delivery_code
 */
ProductUpdate.prototype['delivery_code'] = undefined;

/**
 * @member {module:model/ProductAddPackageDetails} package_details
 */
ProductUpdate.prototype['package_details'] = undefined;

/**
 * The country where the inventory item was made
 * @member {String} country_of_origin
 */
ProductUpdate.prototype['country_of_origin'] = undefined;

/**
 * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
 * @member {String} harmonized_system_code
 */
ProductUpdate.prototype['harmonized_system_code'] = undefined;

/**
 * The numeric ID of the shipping template associated with the products in Etsy. You can find possible values in the \"cart.info\" API method response, in the field shipping_zones[]->id.
 * @member {Number} shipping_template_id
 * @default 0
 */
ProductUpdate.prototype['shipping_template_id'] = 0;

/**
 * An enumerated string for the era in which the maker made the product.
 * @member {String} when_made
 * @default 'made_to_order'
 */
ProductUpdate.prototype['when_made'] = 'made_to_order';

/**
 * If true, it indicates the product as a supply, otherwise it indicates that it is a finished product.
 * @member {Boolean} is_supply
 * @default true
 */
ProductUpdate.prototype['is_supply'] = true;

/**
 * Defines whether the product is downloadable
 * @member {Boolean} downloadable
 * @default false
 */
ProductUpdate.prototype['downloadable'] = false;

/**
 * A list of material strings for materials used in the product.
 * @member {Array.<String>} materials
 */
ProductUpdate.prototype['materials'] = undefined;

/**
 * When true, automatically renews a listing upon its expiration.
 * @member {Boolean} auto_renew
 * @default false
 */
ProductUpdate.prototype['auto_renew'] = false;

/**
 * Set whether the product on sale
 * @member {Boolean} on_sale
 * @default false
 */
ProductUpdate.prototype['on_sale'] = false;

/**
 * Defines product production partner ids that has to be updated
 * @member {String} production_partner_ids
 */
ProductUpdate.prototype['production_partner_ids'] = undefined;

/**
 * @member {module:model/ProductAddManufacturerInfo} manufacturer_info
 */
ProductUpdate.prototype['manufacturer_info'] = undefined;

/**
 * Report request id
 * @member {String} report_request_id
 */
ProductUpdate.prototype['report_request_id'] = undefined;

/**
 * Disable report cache for current request
 * @member {Boolean} disable_report_cache
 * @default false
 */
ProductUpdate.prototype['disable_report_cache'] = false;

/**
 * Is reindex required
 * @member {Boolean} reindex
 * @default true
 */
ProductUpdate.prototype['reindex'] = true;

/**
 * Is cache clear required
 * @member {Boolean} clear_cache
 * @default true
 */
ProductUpdate.prototype['clear_cache'] = true;

/**
 * Disable or enable check process status. Please note that the response will be slower due to additional requests to the store.
 * @member {Boolean} check_process_status
 * @default false
 */
ProductUpdate.prototype['check_process_status'] = false;

/**
 * An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.         The list of possible specifications can be obtained using the category.info method (additional_fields->product_specifics).         <b>The structure of the parameter is different for specific platforms.</b>
 * @member {Array.<module:model/ProductAddSpecificsInner>} specifics
 */
ProductUpdate.prototype['specifics'] = undefined;

/**
 * Add Shop Section Id
 * @member {Number} shop_section_id
 */
ProductUpdate.prototype['shop_section_id'] = undefined;

/**
 * @member {module:model/ProductAddPersonalizationDetails} personalization_details
 */
ProductUpdate.prototype['personalization_details'] = undefined;

/**
 * External product link
 * @member {String} external_product_link
 */
ProductUpdate.prototype['external_product_link'] = undefined;

/**
 * String containing the JSON representation of the supplied data
 * @member {String} marketplace_item_properties
 */
ProductUpdate.prototype['marketplace_item_properties'] = undefined;

/**
 * The minimum quantity an order must contain, to be eligible to purchase this product.
 * @member {Number} min_order_quantity
 */
ProductUpdate.prototype['min_order_quantity'] = undefined;






export default ProductUpdate;

