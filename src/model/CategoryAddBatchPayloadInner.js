/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CategoryAddBatchPayloadInnerImagesInner from './CategoryAddBatchPayloadInnerImagesInner';

/**
 * The CategoryAddBatchPayloadInner model module.
 * @module model/CategoryAddBatchPayloadInner
 * @version 1.1
 */
class CategoryAddBatchPayloadInner {
    /**
     * Constructs a new <code>CategoryAddBatchPayloadInner</code>.
     * @alias module:model/CategoryAddBatchPayloadInner
     * @param name {String} 
     */
    constructor(name) { 
        
        CategoryAddBatchPayloadInner.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CategoryAddBatchPayloadInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CategoryAddBatchPayloadInner} obj Optional instance to populate.
     * @return {module:model/CategoryAddBatchPayloadInner} The populated <code>CategoryAddBatchPayloadInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CategoryAddBatchPayloadInner();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('avail')) {
                obj['avail'] = ApiClient.convertToType(data['avail'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('meta_title')) {
                obj['meta_title'] = ApiClient.convertToType(data['meta_title'], 'String');
            }
            if (data.hasOwnProperty('meta_description')) {
                obj['meta_description'] = ApiClient.convertToType(data['meta_description'], 'String');
            }
            if (data.hasOwnProperty('meta_keywords')) {
                obj['meta_keywords'] = ApiClient.convertToType(data['meta_keywords'], ['String']);
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('seo_url')) {
                obj['seo_url'] = ApiClient.convertToType(data['seo_url'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [CategoryAddBatchPayloadInnerImagesInner]);
            }
            if (data.hasOwnProperty('stores_ids')) {
                obj['stores_ids'] = ApiClient.convertToType(data['stores_ids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CategoryAddBatchPayloadInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CategoryAddBatchPayloadInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CategoryAddBatchPayloadInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['meta_title'] && !(typeof data['meta_title'] === 'string' || data['meta_title'] instanceof String)) {
            throw new Error("Expected the field `meta_title` to be a primitive type in the JSON string but got " + data['meta_title']);
        }
        // ensure the json data is a string
        if (data['meta_description'] && !(typeof data['meta_description'] === 'string' || data['meta_description'] instanceof String)) {
            throw new Error("Expected the field `meta_description` to be a primitive type in the JSON string but got " + data['meta_description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['meta_keywords'])) {
            throw new Error("Expected the field `meta_keywords` to be an array in the JSON data but got " + data['meta_keywords']);
        }
        // ensure the json data is a string
        if (data['parent_id'] && !(typeof data['parent_id'] === 'string' || data['parent_id'] instanceof String)) {
            throw new Error("Expected the field `parent_id` to be a primitive type in the JSON string but got " + data['parent_id']);
        }
        // ensure the json data is a string
        if (data['seo_url'] && !(typeof data['seo_url'] === 'string' || data['seo_url'] instanceof String)) {
            throw new Error("Expected the field `seo_url` to be a primitive type in the JSON string but got " + data['seo_url']);
        }
        // ensure the json data is a string
        if (data['store_id'] && !(typeof data['store_id'] === 'string' || data['store_id'] instanceof String)) {
            throw new Error("Expected the field `store_id` to be a primitive type in the JSON string but got " + data['store_id']);
        }
        if (data['images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['images'])) {
                throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
            }
            // validate the optional field `images` (array)
            for (const item of data['images']) {
                CategoryAddBatchPayloadInnerImagesInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stores_ids'])) {
            throw new Error("Expected the field `stores_ids` to be an array in the JSON data but got " + data['stores_ids']);
        }

        return true;
    }


}

CategoryAddBatchPayloadInner.RequiredProperties = ["name"];

/**
 * @member {String} name
 */
CategoryAddBatchPayloadInner.prototype['name'] = undefined;

/**
 * @member {Boolean} avail
 */
CategoryAddBatchPayloadInner.prototype['avail'] = undefined;

/**
 * @member {String} description
 */
CategoryAddBatchPayloadInner.prototype['description'] = undefined;

/**
 * @member {String} meta_title
 */
CategoryAddBatchPayloadInner.prototype['meta_title'] = undefined;

/**
 * @member {String} meta_description
 */
CategoryAddBatchPayloadInner.prototype['meta_description'] = undefined;

/**
 * @member {Array.<String>} meta_keywords
 */
CategoryAddBatchPayloadInner.prototype['meta_keywords'] = undefined;

/**
 * @member {String} parent_id
 */
CategoryAddBatchPayloadInner.prototype['parent_id'] = undefined;

/**
 * @member {Number} sort_order
 */
CategoryAddBatchPayloadInner.prototype['sort_order'] = undefined;

/**
 * @member {String} seo_url
 */
CategoryAddBatchPayloadInner.prototype['seo_url'] = undefined;

/**
 * @member {String} store_id
 */
CategoryAddBatchPayloadInner.prototype['store_id'] = undefined;

/**
 * @member {Array.<module:model/CategoryAddBatchPayloadInnerImagesInner>} images
 */
CategoryAddBatchPayloadInner.prototype['images'] = undefined;

/**
 * @member {Array.<String>} stores_ids
 */
CategoryAddBatchPayloadInner.prototype['stores_ids'] = undefined;






export default CategoryAddBatchPayloadInner;

