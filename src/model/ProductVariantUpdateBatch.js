/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductVariantUpdateBatchPayloadInner from './ProductVariantUpdateBatchPayloadInner';

/**
 * The ProductVariantUpdateBatch model module.
 * @module model/ProductVariantUpdateBatch
 * @version 1.1
 */
class ProductVariantUpdateBatch {
    /**
     * Constructs a new <code>ProductVariantUpdateBatch</code>.
     * @alias module:model/ProductVariantUpdateBatch
     * @param payload {Array.<module:model/ProductVariantUpdateBatchPayloadInner>} Contains an array of product objects. The list of properties may vary depending on the specific platform.
     */
    constructor(payload) { 
        
        ProductVariantUpdateBatch.initialize(this, payload);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, payload) { 
        obj['nested_items_update_behaviour'] = 'replace';
        obj['clear_cache'] = false;
        obj['reindex'] = false;
        obj['payload'] = payload;
    }

    /**
     * Constructs a <code>ProductVariantUpdateBatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductVariantUpdateBatch} obj Optional instance to populate.
     * @return {module:model/ProductVariantUpdateBatch} The populated <code>ProductVariantUpdateBatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductVariantUpdateBatch();

            if (data.hasOwnProperty('nested_items_update_behaviour')) {
                obj['nested_items_update_behaviour'] = ApiClient.convertToType(data['nested_items_update_behaviour'], 'String');
            }
            if (data.hasOwnProperty('clear_cache')) {
                obj['clear_cache'] = ApiClient.convertToType(data['clear_cache'], 'Boolean');
            }
            if (data.hasOwnProperty('reindex')) {
                obj['reindex'] = ApiClient.convertToType(data['reindex'], 'Boolean');
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], [ProductVariantUpdateBatchPayloadInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductVariantUpdateBatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductVariantUpdateBatch</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductVariantUpdateBatch.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nested_items_update_behaviour'] && !(typeof data['nested_items_update_behaviour'] === 'string' || data['nested_items_update_behaviour'] instanceof String)) {
            throw new Error("Expected the field `nested_items_update_behaviour` to be a primitive type in the JSON string but got " + data['nested_items_update_behaviour']);
        }
        if (data['payload']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['payload'])) {
                throw new Error("Expected the field `payload` to be an array in the JSON data but got " + data['payload']);
            }
            // validate the optional field `payload` (array)
            for (const item of data['payload']) {
                ProductVariantUpdateBatchPayloadInner.validateJSON(item);
            };
        }

        return true;
    }


}

ProductVariantUpdateBatch.RequiredProperties = ["payload"];

/**
 *  Determines how updates to nested items should be handled.<hr><div style=\"font-style:normal\">  Values description:  <div style=\"margin-left: 2%; padding-top: 2%\">    <div style=\"font-size:85%\">      <b>  replace</b>: This option indicates that the nested items should be completely replaced with the new data provided. </br>      <b>  merge</b>: With this option, updates to nested items are merged with the existing data. </br>    </div>  </div></div>
 * @member {module:model/ProductVariantUpdateBatch.NestedItemsUpdateBehaviourEnum} nested_items_update_behaviour
 * @default 'replace'
 */
ProductVariantUpdateBatch.prototype['nested_items_update_behaviour'] = 'replace';

/**
 * @member {Boolean} clear_cache
 * @default false
 */
ProductVariantUpdateBatch.prototype['clear_cache'] = false;

/**
 * @member {Boolean} reindex
 * @default false
 */
ProductVariantUpdateBatch.prototype['reindex'] = false;

/**
 * Contains an array of product objects. The list of properties may vary depending on the specific platform.
 * @member {Array.<module:model/ProductVariantUpdateBatchPayloadInner>} payload
 */
ProductVariantUpdateBatch.prototype['payload'] = undefined;





/**
 * Allowed values for the <code>nested_items_update_behaviour</code> property.
 * @enum {String}
 * @readonly
 */
ProductVariantUpdateBatch['NestedItemsUpdateBehaviourEnum'] = {

    /**
     * value: "replace"
     * @const
     */
    "replace": "replace",

    /**
     * value: "merge"
     * @const
     */
    "merge": "merge"
};



export default ProductVariantUpdateBatch;

