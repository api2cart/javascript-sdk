/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductAddSalesTax model module.
 * @module model/ProductAddSalesTax
 * @version 1.1
 */
class ProductAddSalesTax {
    /**
     * Constructs a new <code>ProductAddSalesTax</code>.
     * Percent of an item&#39;s price to be charged as the sales tax for the order. Look at cart.info method response for allowed values.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;sales_tax[&lt;b&gt;tax_percent&lt;/b&gt;] &#x3D; decimal (##.###)&lt;/br&gt;sales_tax[&lt;b&gt;tax_state&lt;/b&gt;] &#x3D; string&lt;/br&gt;sales_tax[&lt;b&gt;shipping_inc_in_tax&lt;/b&gt;] &#x3D; bool&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
     * @alias module:model/ProductAddSalesTax
     */
    constructor() { 
        
        ProductAddSalesTax.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductAddSalesTax</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductAddSalesTax} obj Optional instance to populate.
     * @return {module:model/ProductAddSalesTax} The populated <code>ProductAddSalesTax</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductAddSalesTax();

            if (data.hasOwnProperty('tax_percent')) {
                obj['tax_percent'] = ApiClient.convertToType(data['tax_percent'], 'Number');
            }
            if (data.hasOwnProperty('tax_state')) {
                obj['tax_state'] = ApiClient.convertToType(data['tax_state'], 'String');
            }
            if (data.hasOwnProperty('shipping_inc_in_tax')) {
                obj['shipping_inc_in_tax'] = ApiClient.convertToType(data['shipping_inc_in_tax'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductAddSalesTax</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductAddSalesTax</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tax_state'] && !(typeof data['tax_state'] === 'string' || data['tax_state'] instanceof String)) {
            throw new Error("Expected the field `tax_state` to be a primitive type in the JSON string but got " + data['tax_state']);
        }

        return true;
    }


}



/**
 * @member {Number} tax_percent
 */
ProductAddSalesTax.prototype['tax_percent'] = undefined;

/**
 * @member {String} tax_state
 */
ProductAddSalesTax.prototype['tax_state'] = undefined;

/**
 * @member {Boolean} shipping_inc_in_tax
 */
ProductAddSalesTax.prototype['shipping_inc_in_tax'] = undefined;






export default ProductAddSalesTax;

