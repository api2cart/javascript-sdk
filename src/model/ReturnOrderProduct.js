/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReturnAction from './ReturnAction';
import ReturnReason from './ReturnReason';

/**
 * The ReturnOrderProduct model module.
 * @module model/ReturnOrderProduct
 * @version 1.1
 */
class ReturnOrderProduct {
    /**
     * Constructs a new <code>ReturnOrderProduct</code>.
     * @alias module:model/ReturnOrderProduct
     */
    constructor() { 
        
        ReturnOrderProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReturnOrderProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReturnOrderProduct} obj Optional instance to populate.
     * @return {module:model/ReturnOrderProduct} The populated <code>ReturnOrderProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReturnOrderProduct();

            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('order_product_id')) {
                obj['order_product_id'] = ApiClient.convertToType(data['order_product_id'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ReturnReason.constructFromObject(data['reason']);
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ReturnAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('customer_comment')) {
                obj['customer_comment'] = ApiClient.convertToType(data['customer_comment'], 'String');
            }
            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReturnOrderProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReturnOrderProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['order_product_id'] && !(typeof data['order_product_id'] === 'string' || data['order_product_id'] instanceof String)) {
            throw new Error("Expected the field `order_product_id` to be a primitive type in the JSON string but got " + data['order_product_id']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `reason`
        if (data['reason']) { // data not null
          ReturnReason.validateJSON(data['reason']);
        }
        // validate the optional field `action`
        if (data['action']) { // data not null
          ReturnAction.validateJSON(data['action']);
        }
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['customer_comment'] && !(typeof data['customer_comment'] === 'string' || data['customer_comment'] instanceof String)) {
            throw new Error("Expected the field `customer_comment` to be a primitive type in the JSON string but got " + data['customer_comment']);
        }

        return true;
    }


}



/**
 * @member {String} product_id
 */
ReturnOrderProduct.prototype['product_id'] = undefined;

/**
 * @member {String} order_product_id
 */
ReturnOrderProduct.prototype['order_product_id'] = undefined;

/**
 * @member {String} sku
 */
ReturnOrderProduct.prototype['sku'] = undefined;

/**
 * @member {String} name
 */
ReturnOrderProduct.prototype['name'] = undefined;

/**
 * @member {Number} quantity
 */
ReturnOrderProduct.prototype['quantity'] = undefined;

/**
 * @member {module:model/ReturnReason} reason
 */
ReturnOrderProduct.prototype['reason'] = undefined;

/**
 * @member {module:model/ReturnAction} action
 */
ReturnOrderProduct.prototype['action'] = undefined;

/**
 * @member {String} condition
 */
ReturnOrderProduct.prototype['condition'] = undefined;

/**
 * @member {String} customer_comment
 */
ReturnOrderProduct.prototype['customer_comment'] = undefined;

/**
 * @member {Object} additional_fields
 */
ReturnOrderProduct.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
ReturnOrderProduct.prototype['custom_fields'] = undefined;






export default ReturnOrderProduct;

