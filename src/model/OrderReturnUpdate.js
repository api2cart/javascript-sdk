/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderReturnUpdateOrderProductsInner from './OrderReturnUpdateOrderProductsInner';

/**
 * The OrderReturnUpdate model module.
 * @module model/OrderReturnUpdate
 * @version 1.1
 */
class OrderReturnUpdate {
    /**
     * Constructs a new <code>OrderReturnUpdate</code>.
     * @alias module:model/OrderReturnUpdate
     * @param returnId {String} Return ID
     * @param orderProducts {Array.<module:model/OrderReturnUpdateOrderProductsInner>} 
     */
    constructor(returnId, orderProducts) { 
        
        OrderReturnUpdate.initialize(this, returnId, orderProducts);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, returnId, orderProducts) { 
        obj['return_id'] = returnId;
        obj['item_restock'] = false;
        obj['send_notifications'] = false;
        obj['order_products'] = orderProducts;
    }

    /**
     * Constructs a <code>OrderReturnUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderReturnUpdate} obj Optional instance to populate.
     * @return {module:model/OrderReturnUpdate} The populated <code>OrderReturnUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderReturnUpdate();

            if (data.hasOwnProperty('return_id')) {
                obj['return_id'] = ApiClient.convertToType(data['return_id'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'String');
            }
            if (data.hasOwnProperty('item_restock')) {
                obj['item_restock'] = ApiClient.convertToType(data['item_restock'], 'Boolean');
            }
            if (data.hasOwnProperty('return_status_id')) {
                obj['return_status_id'] = ApiClient.convertToType(data['return_status_id'], 'String');
            }
            if (data.hasOwnProperty('staff_note')) {
                obj['staff_note'] = ApiClient.convertToType(data['staff_note'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('send_notifications')) {
                obj['send_notifications'] = ApiClient.convertToType(data['send_notifications'], 'Boolean');
            }
            if (data.hasOwnProperty('reject_reason')) {
                obj['reject_reason'] = ApiClient.convertToType(data['reject_reason'], 'String');
            }
            if (data.hasOwnProperty('order_products')) {
                obj['order_products'] = ApiClient.convertToType(data['order_products'], [OrderReturnUpdateOrderProductsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderReturnUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderReturnUpdate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderReturnUpdate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['return_id'] && !(typeof data['return_id'] === 'string' || data['return_id'] instanceof String)) {
            throw new Error("Expected the field `return_id` to be a primitive type in the JSON string but got " + data['return_id']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['store_id'] && !(typeof data['store_id'] === 'string' || data['store_id'] instanceof String)) {
            throw new Error("Expected the field `store_id` to be a primitive type in the JSON string but got " + data['store_id']);
        }
        // ensure the json data is a string
        if (data['return_status_id'] && !(typeof data['return_status_id'] === 'string' || data['return_status_id'] instanceof String)) {
            throw new Error("Expected the field `return_status_id` to be a primitive type in the JSON string but got " + data['return_status_id']);
        }
        // ensure the json data is a string
        if (data['staff_note'] && !(typeof data['staff_note'] === 'string' || data['staff_note'] instanceof String)) {
            throw new Error("Expected the field `staff_note` to be a primitive type in the JSON string but got " + data['staff_note']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['reject_reason'] && !(typeof data['reject_reason'] === 'string' || data['reject_reason'] instanceof String)) {
            throw new Error("Expected the field `reject_reason` to be a primitive type in the JSON string but got " + data['reject_reason']);
        }
        if (data['order_products']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['order_products'])) {
                throw new Error("Expected the field `order_products` to be an array in the JSON data but got " + data['order_products']);
            }
            // validate the optional field `order_products` (array)
            for (const item of data['order_products']) {
                OrderReturnUpdateOrderProductsInner.validateJSON(item);
            };
        }

        return true;
    }


}

OrderReturnUpdate.RequiredProperties = ["return_id", "order_products"];

/**
 * Return ID
 * @member {String} return_id
 */
OrderReturnUpdate.prototype['return_id'] = undefined;

/**
 * Defines the order id
 * @member {String} order_id
 */
OrderReturnUpdate.prototype['order_id'] = undefined;

/**
 * Store Id
 * @member {String} store_id
 */
OrderReturnUpdate.prototype['store_id'] = undefined;

/**
 * Boolean, whether or not to add the line items back to the store inventory.
 * @member {Boolean} item_restock
 * @default false
 */
OrderReturnUpdate.prototype['item_restock'] = false;

/**
 * Defines return request status
 * @member {String} return_status_id
 */
OrderReturnUpdate.prototype['return_status_id'] = undefined;

/**
 * Specifies staff note
 * @member {String} staff_note
 */
OrderReturnUpdate.prototype['staff_note'] = undefined;

/**
 * Specifies return comment
 * @member {String} comment
 */
OrderReturnUpdate.prototype['comment'] = undefined;

/**
 * Send notifications to customer after order was created
 * @member {Boolean} send_notifications
 * @default false
 */
OrderReturnUpdate.prototype['send_notifications'] = false;

/**
 * Defines return reject reason
 * @member {String} reject_reason
 */
OrderReturnUpdate.prototype['reject_reason'] = undefined;

/**
 * @member {Array.<module:model/OrderReturnUpdateOrderProductsInner>} order_products
 */
OrderReturnUpdate.prototype['order_products'] = undefined;






export default OrderReturnUpdate;

