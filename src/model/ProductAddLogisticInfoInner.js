/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductAddLogisticInfoInner model module.
 * @module model/ProductAddLogisticInfoInner
 * @version 1.1
 */
class ProductAddLogisticInfoInner {
    /**
     * Constructs a new <code>ProductAddLogisticInfoInner</code>.
     * @alias module:model/ProductAddLogisticInfoInner
     * @param logisticId {Number} 
     */
    constructor(logisticId) { 
        
        ProductAddLogisticInfoInner.initialize(this, logisticId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, logisticId) { 
        obj['logistic_id'] = logisticId;
    }

    /**
     * Constructs a <code>ProductAddLogisticInfoInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductAddLogisticInfoInner} obj Optional instance to populate.
     * @return {module:model/ProductAddLogisticInfoInner} The populated <code>ProductAddLogisticInfoInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductAddLogisticInfoInner();

            if (data.hasOwnProperty('logistic_id')) {
                obj['logistic_id'] = ApiClient.convertToType(data['logistic_id'], 'Number');
            }
            if (data.hasOwnProperty('is_free')) {
                obj['is_free'] = ApiClient.convertToType(data['is_free'], 'Boolean');
            }
            if (data.hasOwnProperty('shipping_fee')) {
                obj['shipping_fee'] = ApiClient.convertToType(data['shipping_fee'], 'Number');
            }
            if (data.hasOwnProperty('size_id')) {
                obj['size_id'] = ApiClient.convertToType(data['size_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductAddLogisticInfoInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductAddLogisticInfoInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductAddLogisticInfoInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ProductAddLogisticInfoInner.RequiredProperties = ["logistic_id"];

/**
 * @member {Number} logistic_id
 */
ProductAddLogisticInfoInner.prototype['logistic_id'] = undefined;

/**
 * @member {Boolean} is_free
 */
ProductAddLogisticInfoInner.prototype['is_free'] = undefined;

/**
 * @member {Number} shipping_fee
 */
ProductAddLogisticInfoInner.prototype['shipping_fee'] = undefined;

/**
 * @member {Number} size_id
 */
ProductAddLogisticInfoInner.prototype['size_id'] = undefined;






export default ProductAddLogisticInfoInner;

