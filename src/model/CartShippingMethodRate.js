/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CartShippingMethodRate model module.
 * @module model/CartShippingMethodRate
 * @version 1.1
 */
class CartShippingMethodRate {
    /**
     * Constructs a new <code>CartShippingMethodRate</code>.
     * @alias module:model/CartShippingMethodRate
     */
    constructor() { 
        
        CartShippingMethodRate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CartShippingMethodRate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CartShippingMethodRate} obj Optional instance to populate.
     * @return {module:model/CartShippingMethodRate} The populated <code>CartShippingMethodRate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CartShippingMethodRate();

            if (data.hasOwnProperty('min_weight')) {
                obj['min_weight'] = ApiClient.convertToType(data['min_weight'], 'String');
            }
            if (data.hasOwnProperty('max_weight')) {
                obj['max_weight'] = ApiClient.convertToType(data['max_weight'], 'String');
            }
            if (data.hasOwnProperty('min_order_amount')) {
                obj['min_order_amount'] = ApiClient.convertToType(data['min_order_amount'], 'String');
            }
            if (data.hasOwnProperty('max_order_amount')) {
                obj['max_order_amount'] = ApiClient.convertToType(data['max_order_amount'], 'String');
            }
            if (data.hasOwnProperty('min_items_count')) {
                obj['min_items_count'] = ApiClient.convertToType(data['min_items_count'], 'String');
            }
            if (data.hasOwnProperty('max_items_count')) {
                obj['max_items_count'] = ApiClient.convertToType(data['max_items_count'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CartShippingMethodRate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CartShippingMethodRate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['min_weight'] && !(typeof data['min_weight'] === 'string' || data['min_weight'] instanceof String)) {
            throw new Error("Expected the field `min_weight` to be a primitive type in the JSON string but got " + data['min_weight']);
        }
        // ensure the json data is a string
        if (data['max_weight'] && !(typeof data['max_weight'] === 'string' || data['max_weight'] instanceof String)) {
            throw new Error("Expected the field `max_weight` to be a primitive type in the JSON string but got " + data['max_weight']);
        }
        // ensure the json data is a string
        if (data['min_order_amount'] && !(typeof data['min_order_amount'] === 'string' || data['min_order_amount'] instanceof String)) {
            throw new Error("Expected the field `min_order_amount` to be a primitive type in the JSON string but got " + data['min_order_amount']);
        }
        // ensure the json data is a string
        if (data['max_order_amount'] && !(typeof data['max_order_amount'] === 'string' || data['max_order_amount'] instanceof String)) {
            throw new Error("Expected the field `max_order_amount` to be a primitive type in the JSON string but got " + data['max_order_amount']);
        }
        // ensure the json data is a string
        if (data['min_items_count'] && !(typeof data['min_items_count'] === 'string' || data['min_items_count'] instanceof String)) {
            throw new Error("Expected the field `min_items_count` to be a primitive type in the JSON string but got " + data['min_items_count']);
        }
        // ensure the json data is a string
        if (data['max_items_count'] && !(typeof data['max_items_count'] === 'string' || data['max_items_count'] instanceof String)) {
            throw new Error("Expected the field `max_items_count` to be a primitive type in the JSON string but got " + data['max_items_count']);
        }
        // ensure the json data is a string
        if (data['price'] && !(typeof data['price'] === 'string' || data['price'] instanceof String)) {
            throw new Error("Expected the field `price` to be a primitive type in the JSON string but got " + data['price']);
        }

        return true;
    }


}



/**
 * @member {String} min_weight
 */
CartShippingMethodRate.prototype['min_weight'] = undefined;

/**
 * @member {String} max_weight
 */
CartShippingMethodRate.prototype['max_weight'] = undefined;

/**
 * @member {String} min_order_amount
 */
CartShippingMethodRate.prototype['min_order_amount'] = undefined;

/**
 * @member {String} max_order_amount
 */
CartShippingMethodRate.prototype['max_order_amount'] = undefined;

/**
 * @member {String} min_items_count
 */
CartShippingMethodRate.prototype['min_items_count'] = undefined;

/**
 * @member {String} max_items_count
 */
CartShippingMethodRate.prototype['max_items_count'] = undefined;

/**
 * @member {String} price
 */
CartShippingMethodRate.prototype['price'] = undefined;

/**
 * @member {Object} additional_fields
 */
CartShippingMethodRate.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
CartShippingMethodRate.prototype['custom_fields'] = undefined;






export default CartShippingMethodRate;

