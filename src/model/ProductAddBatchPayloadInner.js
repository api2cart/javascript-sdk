/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductAddBatchPayloadInnerAdvancedPricesInner from './ProductAddBatchPayloadInnerAdvancedPricesInner';
import ProductAddBatchPayloadInnerImagesInner from './ProductAddBatchPayloadInnerImagesInner';
import ProductAddFilesInner from './ProductAddFilesInner';

/**
 * The ProductAddBatchPayloadInner model module.
 * @module model/ProductAddBatchPayloadInner
 * @version 1.1
 */
class ProductAddBatchPayloadInner {
    /**
     * Constructs a new <code>ProductAddBatchPayloadInner</code>.
     * @alias module:model/ProductAddBatchPayloadInner
     */
    constructor() { 
        
        ProductAddBatchPayloadInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductAddBatchPayloadInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductAddBatchPayloadInner} obj Optional instance to populate.
     * @return {module:model/ProductAddBatchPayloadInner} The populated <code>ProductAddBatchPayloadInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductAddBatchPayloadInner();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('short_description')) {
                obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('asin')) {
                obj['asin'] = ApiClient.convertToType(data['asin'], 'String');
            }
            if (data.hasOwnProperty('upc')) {
                obj['upc'] = ApiClient.convertToType(data['upc'], 'String');
            }
            if (data.hasOwnProperty('ean')) {
                obj['ean'] = ApiClient.convertToType(data['ean'], 'String');
            }
            if (data.hasOwnProperty('gtin')) {
                obj['gtin'] = ApiClient.convertToType(data['gtin'], 'String');
            }
            if (data.hasOwnProperty('mpn')) {
                obj['mpn'] = ApiClient.convertToType(data['mpn'], 'String');
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('old_price')) {
                obj['old_price'] = ApiClient.convertToType(data['old_price'], 'Number');
            }
            if (data.hasOwnProperty('cost_price')) {
                obj['cost_price'] = ApiClient.convertToType(data['cost_price'], 'Number');
            }
            if (data.hasOwnProperty('special_price')) {
                obj['special_price'] = ApiClient.convertToType(data['special_price'], 'Number');
            }
            if (data.hasOwnProperty('sprice_create')) {
                obj['sprice_create'] = ApiClient.convertToType(data['sprice_create'], 'String');
            }
            if (data.hasOwnProperty('sprice_expire')) {
                obj['sprice_expire'] = ApiClient.convertToType(data['sprice_expire'], 'String');
            }
            if (data.hasOwnProperty('advanced_prices')) {
                obj['advanced_prices'] = ApiClient.convertToType(data['advanced_prices'], [ProductAddBatchPayloadInnerAdvancedPricesInner]);
            }
            if (data.hasOwnProperty('fixed_cost_shipping_price')) {
                obj['fixed_cost_shipping_price'] = ApiClient.convertToType(data['fixed_cost_shipping_price'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('manage_stock')) {
                obj['manage_stock'] = ApiClient.convertToType(data['manage_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('product_type')) {
                obj['product_type'] = ApiClient.convertToType(data['product_type'], 'String');
            }
            if (data.hasOwnProperty('marketplace_item_properties')) {
                obj['marketplace_item_properties'] = ApiClient.convertToType(data['marketplace_item_properties'], Object);
            }
            if (data.hasOwnProperty('specifics')) {
                obj['specifics'] = ApiClient.convertToType(data['specifics'], Object);
            }
            if (data.hasOwnProperty('is_free_shipping')) {
                obj['is_free_shipping'] = ApiClient.convertToType(data['is_free_shipping'], 'Boolean');
            }
            if (data.hasOwnProperty('taxable')) {
                obj['taxable'] = ApiClient.convertToType(data['taxable'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'String');
            }
            if (data.hasOwnProperty('available_for_view')) {
                obj['available_for_view'] = ApiClient.convertToType(data['available_for_view'], 'Boolean');
            }
            if (data.hasOwnProperty('available_for_sale')) {
                obj['available_for_sale'] = ApiClient.convertToType(data['available_for_sale'], 'Boolean');
            }
            if (data.hasOwnProperty('is_virtual')) {
                obj['is_virtual'] = ApiClient.convertToType(data['is_virtual'], 'Boolean');
            }
            if (data.hasOwnProperty('in_stock')) {
                obj['in_stock'] = ApiClient.convertToType(data['in_stock'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('downloadable')) {
                obj['downloadable'] = ApiClient.convertToType(data['downloadable'], 'Boolean');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('weight_unit')) {
                obj['weight_unit'] = ApiClient.convertToType(data['weight_unit'], 'String');
            }
            if (data.hasOwnProperty('dimensions_unit')) {
                obj['dimensions_unit'] = ApiClient.convertToType(data['dimensions_unit'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'String');
            }
            if (data.hasOwnProperty('lang_id')) {
                obj['lang_id'] = ApiClient.convertToType(data['lang_id'], 'String');
            }
            if (data.hasOwnProperty('category_id')) {
                obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
            }
            if (data.hasOwnProperty('warehouse_id')) {
                obj['warehouse_id'] = ApiClient.convertToType(data['warehouse_id'], 'String');
            }
            if (data.hasOwnProperty('categories_ids')) {
                obj['categories_ids'] = ApiClient.convertToType(data['categories_ids'], ['String']);
            }
            if (data.hasOwnProperty('related_products_ids')) {
                obj['related_products_ids'] = ApiClient.convertToType(data['related_products_ids'], ['String']);
            }
            if (data.hasOwnProperty('up_sell_products_ids')) {
                obj['up_sell_products_ids'] = ApiClient.convertToType(data['up_sell_products_ids'], ['String']);
            }
            if (data.hasOwnProperty('cross_sell_products_ids')) {
                obj['cross_sell_products_ids'] = ApiClient.convertToType(data['cross_sell_products_ids'], ['String']);
            }
            if (data.hasOwnProperty('stores_ids')) {
                obj['stores_ids'] = ApiClient.convertToType(data['stores_ids'], ['String']);
            }
            if (data.hasOwnProperty('tax_class_id')) {
                obj['tax_class_id'] = ApiClient.convertToType(data['tax_class_id'], 'String');
            }
            if (data.hasOwnProperty('meta_title')) {
                obj['meta_title'] = ApiClient.convertToType(data['meta_title'], 'String');
            }
            if (data.hasOwnProperty('meta_description')) {
                obj['meta_description'] = ApiClient.convertToType(data['meta_description'], 'String');
            }
            if (data.hasOwnProperty('meta_keywords')) {
                obj['meta_keywords'] = ApiClient.convertToType(data['meta_keywords'], ['String']);
            }
            if (data.hasOwnProperty('search_keywords')) {
                obj['search_keywords'] = ApiClient.convertToType(data['search_keywords'], ['String']);
            }
            if (data.hasOwnProperty('harmonized_system_code')) {
                obj['harmonized_system_code'] = ApiClient.convertToType(data['harmonized_system_code'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('seo_url')) {
                obj['seo_url'] = ApiClient.convertToType(data['seo_url'], 'String');
            }
            if (data.hasOwnProperty('external_product_link')) {
                obj['external_product_link'] = ApiClient.convertToType(data['external_product_link'], 'String');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('manufacturer_id')) {
                obj['manufacturer_id'] = ApiClient.convertToType(data['manufacturer_id'], 'String');
            }
            if (data.hasOwnProperty('backorder_status')) {
                obj['backorder_status'] = ApiClient.convertToType(data['backorder_status'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [ProductAddBatchPayloadInnerImagesInner]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [ProductAddFilesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductAddBatchPayloadInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductAddBatchPayloadInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['short_description'] && !(typeof data['short_description'] === 'string' || data['short_description'] instanceof String)) {
            throw new Error("Expected the field `short_description` to be a primitive type in the JSON string but got " + data['short_description']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['asin'] && !(typeof data['asin'] === 'string' || data['asin'] instanceof String)) {
            throw new Error("Expected the field `asin` to be a primitive type in the JSON string but got " + data['asin']);
        }
        // ensure the json data is a string
        if (data['upc'] && !(typeof data['upc'] === 'string' || data['upc'] instanceof String)) {
            throw new Error("Expected the field `upc` to be a primitive type in the JSON string but got " + data['upc']);
        }
        // ensure the json data is a string
        if (data['ean'] && !(typeof data['ean'] === 'string' || data['ean'] instanceof String)) {
            throw new Error("Expected the field `ean` to be a primitive type in the JSON string but got " + data['ean']);
        }
        // ensure the json data is a string
        if (data['gtin'] && !(typeof data['gtin'] === 'string' || data['gtin'] instanceof String)) {
            throw new Error("Expected the field `gtin` to be a primitive type in the JSON string but got " + data['gtin']);
        }
        // ensure the json data is a string
        if (data['mpn'] && !(typeof data['mpn'] === 'string' || data['mpn'] instanceof String)) {
            throw new Error("Expected the field `mpn` to be a primitive type in the JSON string but got " + data['mpn']);
        }
        // ensure the json data is a string
        if (data['barcode'] && !(typeof data['barcode'] === 'string' || data['barcode'] instanceof String)) {
            throw new Error("Expected the field `barcode` to be a primitive type in the JSON string but got " + data['barcode']);
        }
        // ensure the json data is a string
        if (data['sprice_create'] && !(typeof data['sprice_create'] === 'string' || data['sprice_create'] instanceof String)) {
            throw new Error("Expected the field `sprice_create` to be a primitive type in the JSON string but got " + data['sprice_create']);
        }
        // ensure the json data is a string
        if (data['sprice_expire'] && !(typeof data['sprice_expire'] === 'string' || data['sprice_expire'] instanceof String)) {
            throw new Error("Expected the field `sprice_expire` to be a primitive type in the JSON string but got " + data['sprice_expire']);
        }
        if (data['advanced_prices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['advanced_prices'])) {
                throw new Error("Expected the field `advanced_prices` to be an array in the JSON data but got " + data['advanced_prices']);
            }
            // validate the optional field `advanced_prices` (array)
            for (const item of data['advanced_prices']) {
                ProductAddBatchPayloadInnerAdvancedPricesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['product_type'] && !(typeof data['product_type'] === 'string' || data['product_type'] instanceof String)) {
            throw new Error("Expected the field `product_type` to be a primitive type in the JSON string but got " + data['product_type']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['visible'] && !(typeof data['visible'] === 'string' || data['visible'] instanceof String)) {
            throw new Error("Expected the field `visible` to be a primitive type in the JSON string but got " + data['visible']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['weight_unit'] && !(typeof data['weight_unit'] === 'string' || data['weight_unit'] instanceof String)) {
            throw new Error("Expected the field `weight_unit` to be a primitive type in the JSON string but got " + data['weight_unit']);
        }
        // ensure the json data is a string
        if (data['dimensions_unit'] && !(typeof data['dimensions_unit'] === 'string' || data['dimensions_unit'] instanceof String)) {
            throw new Error("Expected the field `dimensions_unit` to be a primitive type in the JSON string but got " + data['dimensions_unit']);
        }
        // ensure the json data is a string
        if (data['store_id'] && !(typeof data['store_id'] === 'string' || data['store_id'] instanceof String)) {
            throw new Error("Expected the field `store_id` to be a primitive type in the JSON string but got " + data['store_id']);
        }
        // ensure the json data is a string
        if (data['lang_id'] && !(typeof data['lang_id'] === 'string' || data['lang_id'] instanceof String)) {
            throw new Error("Expected the field `lang_id` to be a primitive type in the JSON string but got " + data['lang_id']);
        }
        // ensure the json data is a string
        if (data['category_id'] && !(typeof data['category_id'] === 'string' || data['category_id'] instanceof String)) {
            throw new Error("Expected the field `category_id` to be a primitive type in the JSON string but got " + data['category_id']);
        }
        // ensure the json data is a string
        if (data['warehouse_id'] && !(typeof data['warehouse_id'] === 'string' || data['warehouse_id'] instanceof String)) {
            throw new Error("Expected the field `warehouse_id` to be a primitive type in the JSON string but got " + data['warehouse_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories_ids'])) {
            throw new Error("Expected the field `categories_ids` to be an array in the JSON data but got " + data['categories_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['related_products_ids'])) {
            throw new Error("Expected the field `related_products_ids` to be an array in the JSON data but got " + data['related_products_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['up_sell_products_ids'])) {
            throw new Error("Expected the field `up_sell_products_ids` to be an array in the JSON data but got " + data['up_sell_products_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['cross_sell_products_ids'])) {
            throw new Error("Expected the field `cross_sell_products_ids` to be an array in the JSON data but got " + data['cross_sell_products_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stores_ids'])) {
            throw new Error("Expected the field `stores_ids` to be an array in the JSON data but got " + data['stores_ids']);
        }
        // ensure the json data is a string
        if (data['tax_class_id'] && !(typeof data['tax_class_id'] === 'string' || data['tax_class_id'] instanceof String)) {
            throw new Error("Expected the field `tax_class_id` to be a primitive type in the JSON string but got " + data['tax_class_id']);
        }
        // ensure the json data is a string
        if (data['meta_title'] && !(typeof data['meta_title'] === 'string' || data['meta_title'] instanceof String)) {
            throw new Error("Expected the field `meta_title` to be a primitive type in the JSON string but got " + data['meta_title']);
        }
        // ensure the json data is a string
        if (data['meta_description'] && !(typeof data['meta_description'] === 'string' || data['meta_description'] instanceof String)) {
            throw new Error("Expected the field `meta_description` to be a primitive type in the JSON string but got " + data['meta_description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['meta_keywords'])) {
            throw new Error("Expected the field `meta_keywords` to be an array in the JSON data but got " + data['meta_keywords']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['search_keywords'])) {
            throw new Error("Expected the field `search_keywords` to be an array in the JSON data but got " + data['search_keywords']);
        }
        // ensure the json data is a string
        if (data['harmonized_system_code'] && !(typeof data['harmonized_system_code'] === 'string' || data['harmonized_system_code'] instanceof String)) {
            throw new Error("Expected the field `harmonized_system_code` to be a primitive type in the JSON string but got " + data['harmonized_system_code']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['seo_url'] && !(typeof data['seo_url'] === 'string' || data['seo_url'] instanceof String)) {
            throw new Error("Expected the field `seo_url` to be a primitive type in the JSON string but got " + data['seo_url']);
        }
        // ensure the json data is a string
        if (data['external_product_link'] && !(typeof data['external_product_link'] === 'string' || data['external_product_link'] instanceof String)) {
            throw new Error("Expected the field `external_product_link` to be a primitive type in the JSON string but got " + data['external_product_link']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['manufacturer_id'] && !(typeof data['manufacturer_id'] === 'string' || data['manufacturer_id'] instanceof String)) {
            throw new Error("Expected the field `manufacturer_id` to be a primitive type in the JSON string but got " + data['manufacturer_id']);
        }
        // ensure the json data is a string
        if (data['backorder_status'] && !(typeof data['backorder_status'] === 'string' || data['backorder_status'] instanceof String)) {
            throw new Error("Expected the field `backorder_status` to be a primitive type in the JSON string but got " + data['backorder_status']);
        }
        if (data['images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['images'])) {
                throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
            }
            // validate the optional field `images` (array)
            for (const item of data['images']) {
                ProductAddBatchPayloadInnerImagesInner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        if (data['files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['files'])) {
                throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
            }
            // validate the optional field `files` (array)
            for (const item of data['files']) {
                ProductAddFilesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} name
 */
ProductAddBatchPayloadInner.prototype['name'] = undefined;

/**
 * @member {String} description
 */
ProductAddBatchPayloadInner.prototype['description'] = undefined;

/**
 * @member {String} short_description
 */
ProductAddBatchPayloadInner.prototype['short_description'] = undefined;

/**
 * @member {String} sku
 */
ProductAddBatchPayloadInner.prototype['sku'] = undefined;

/**
 * @member {String} model
 */
ProductAddBatchPayloadInner.prototype['model'] = undefined;

/**
 * @member {String} asin
 */
ProductAddBatchPayloadInner.prototype['asin'] = undefined;

/**
 * @member {String} upc
 */
ProductAddBatchPayloadInner.prototype['upc'] = undefined;

/**
 * @member {String} ean
 */
ProductAddBatchPayloadInner.prototype['ean'] = undefined;

/**
 * @member {String} gtin
 */
ProductAddBatchPayloadInner.prototype['gtin'] = undefined;

/**
 * @member {String} mpn
 */
ProductAddBatchPayloadInner.prototype['mpn'] = undefined;

/**
 * @member {String} barcode
 */
ProductAddBatchPayloadInner.prototype['barcode'] = undefined;

/**
 * @member {Number} price
 */
ProductAddBatchPayloadInner.prototype['price'] = undefined;

/**
 * @member {Number} old_price
 */
ProductAddBatchPayloadInner.prototype['old_price'] = undefined;

/**
 * @member {Number} cost_price
 */
ProductAddBatchPayloadInner.prototype['cost_price'] = undefined;

/**
 * @member {Number} special_price
 */
ProductAddBatchPayloadInner.prototype['special_price'] = undefined;

/**
 * @member {String} sprice_create
 */
ProductAddBatchPayloadInner.prototype['sprice_create'] = undefined;

/**
 * @member {String} sprice_expire
 */
ProductAddBatchPayloadInner.prototype['sprice_expire'] = undefined;

/**
 * @member {Array.<module:model/ProductAddBatchPayloadInnerAdvancedPricesInner>} advanced_prices
 */
ProductAddBatchPayloadInner.prototype['advanced_prices'] = undefined;

/**
 * @member {Number} fixed_cost_shipping_price
 */
ProductAddBatchPayloadInner.prototype['fixed_cost_shipping_price'] = undefined;

/**
 * @member {Number} quantity
 */
ProductAddBatchPayloadInner.prototype['quantity'] = undefined;

/**
 * @member {Boolean} manage_stock
 */
ProductAddBatchPayloadInner.prototype['manage_stock'] = undefined;

/**
 * @member {String} product_type
 */
ProductAddBatchPayloadInner.prototype['product_type'] = undefined;

/**
 * @member {Object} marketplace_item_properties
 */
ProductAddBatchPayloadInner.prototype['marketplace_item_properties'] = undefined;

/**
 * @member {Object} specifics
 */
ProductAddBatchPayloadInner.prototype['specifics'] = undefined;

/**
 * @member {Boolean} is_free_shipping
 */
ProductAddBatchPayloadInner.prototype['is_free_shipping'] = undefined;

/**
 * @member {Boolean} taxable
 */
ProductAddBatchPayloadInner.prototype['taxable'] = undefined;

/**
 * @member {String} status
 */
ProductAddBatchPayloadInner.prototype['status'] = undefined;

/**
 * @member {String} condition
 */
ProductAddBatchPayloadInner.prototype['condition'] = undefined;

/**
 * @member {String} visible
 */
ProductAddBatchPayloadInner.prototype['visible'] = undefined;

/**
 * @member {Boolean} available_for_view
 */
ProductAddBatchPayloadInner.prototype['available_for_view'] = undefined;

/**
 * @member {Boolean} available_for_sale
 */
ProductAddBatchPayloadInner.prototype['available_for_sale'] = undefined;

/**
 * @member {Boolean} is_virtual
 */
ProductAddBatchPayloadInner.prototype['is_virtual'] = undefined;

/**
 * @member {Boolean} in_stock
 */
ProductAddBatchPayloadInner.prototype['in_stock'] = undefined;

/**
 * @member {String} type
 */
ProductAddBatchPayloadInner.prototype['type'] = undefined;

/**
 * @member {Boolean} downloadable
 */
ProductAddBatchPayloadInner.prototype['downloadable'] = undefined;

/**
 * @member {Number} weight
 */
ProductAddBatchPayloadInner.prototype['weight'] = undefined;

/**
 * @member {Number} length
 */
ProductAddBatchPayloadInner.prototype['length'] = undefined;

/**
 * @member {Number} width
 */
ProductAddBatchPayloadInner.prototype['width'] = undefined;

/**
 * @member {Number} height
 */
ProductAddBatchPayloadInner.prototype['height'] = undefined;

/**
 * @member {String} weight_unit
 */
ProductAddBatchPayloadInner.prototype['weight_unit'] = undefined;

/**
 * @member {String} dimensions_unit
 */
ProductAddBatchPayloadInner.prototype['dimensions_unit'] = undefined;

/**
 * @member {String} store_id
 */
ProductAddBatchPayloadInner.prototype['store_id'] = undefined;

/**
 * @member {String} lang_id
 */
ProductAddBatchPayloadInner.prototype['lang_id'] = undefined;

/**
 * @member {String} category_id
 */
ProductAddBatchPayloadInner.prototype['category_id'] = undefined;

/**
 * @member {String} warehouse_id
 */
ProductAddBatchPayloadInner.prototype['warehouse_id'] = undefined;

/**
 * @member {Array.<String>} categories_ids
 */
ProductAddBatchPayloadInner.prototype['categories_ids'] = undefined;

/**
 * @member {Array.<String>} related_products_ids
 */
ProductAddBatchPayloadInner.prototype['related_products_ids'] = undefined;

/**
 * @member {Array.<String>} up_sell_products_ids
 */
ProductAddBatchPayloadInner.prototype['up_sell_products_ids'] = undefined;

/**
 * @member {Array.<String>} cross_sell_products_ids
 */
ProductAddBatchPayloadInner.prototype['cross_sell_products_ids'] = undefined;

/**
 * @member {Array.<String>} stores_ids
 */
ProductAddBatchPayloadInner.prototype['stores_ids'] = undefined;

/**
 * @member {String} tax_class_id
 */
ProductAddBatchPayloadInner.prototype['tax_class_id'] = undefined;

/**
 * @member {String} meta_title
 */
ProductAddBatchPayloadInner.prototype['meta_title'] = undefined;

/**
 * @member {String} meta_description
 */
ProductAddBatchPayloadInner.prototype['meta_description'] = undefined;

/**
 * @member {Array.<String>} meta_keywords
 */
ProductAddBatchPayloadInner.prototype['meta_keywords'] = undefined;

/**
 * @member {Array.<String>} search_keywords
 */
ProductAddBatchPayloadInner.prototype['search_keywords'] = undefined;

/**
 * @member {String} harmonized_system_code
 */
ProductAddBatchPayloadInner.prototype['harmonized_system_code'] = undefined;

/**
 * @member {String} url
 */
ProductAddBatchPayloadInner.prototype['url'] = undefined;

/**
 * @member {String} seo_url
 */
ProductAddBatchPayloadInner.prototype['seo_url'] = undefined;

/**
 * @member {String} external_product_link
 */
ProductAddBatchPayloadInner.prototype['external_product_link'] = undefined;

/**
 * @member {String} manufacturer
 */
ProductAddBatchPayloadInner.prototype['manufacturer'] = undefined;

/**
 * @member {String} manufacturer_id
 */
ProductAddBatchPayloadInner.prototype['manufacturer_id'] = undefined;

/**
 * @member {String} backorder_status
 */
ProductAddBatchPayloadInner.prototype['backorder_status'] = undefined;

/**
 * @member {Array.<module:model/ProductAddBatchPayloadInnerImagesInner>} images
 */
ProductAddBatchPayloadInner.prototype['images'] = undefined;

/**
 * @member {Array.<String>} tags
 */
ProductAddBatchPayloadInner.prototype['tags'] = undefined;

/**
 * @member {Array.<module:model/ProductAddFilesInner>} files
 */
ProductAddBatchPayloadInner.prototype['files'] = undefined;






export default ProductAddBatchPayloadInner;

