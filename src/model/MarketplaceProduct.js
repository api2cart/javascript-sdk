/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Image from './Image';
import ProductOption from './ProductOption';

/**
 * The MarketplaceProduct model module.
 * @module model/MarketplaceProduct
 * @version 1.1
 */
class MarketplaceProduct {
    /**
     * Constructs a new <code>MarketplaceProduct</code>.
     * @alias module:model/MarketplaceProduct
     */
    constructor() { 
        
        MarketplaceProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MarketplaceProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MarketplaceProduct} obj Optional instance to populate.
     * @return {module:model/MarketplaceProduct} The populated <code>MarketplaceProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MarketplaceProduct();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('u_asin')) {
                obj['u_asin'] = ApiClient.convertToType(data['u_asin'], 'String');
            }
            if (data.hasOwnProperty('u_ean')) {
                obj['u_ean'] = ApiClient.convertToType(data['u_ean'], 'String');
            }
            if (data.hasOwnProperty('u_gtin')) {
                obj['u_gtin'] = ApiClient.convertToType(data['u_gtin'], 'String');
            }
            if (data.hasOwnProperty('u_isbn')) {
                obj['u_isbn'] = ApiClient.convertToType(data['u_isbn'], 'String');
            }
            if (data.hasOwnProperty('u_mpn')) {
                obj['u_mpn'] = ApiClient.convertToType(data['u_mpn'], 'String');
            }
            if (data.hasOwnProperty('u_upc')) {
                obj['u_upc'] = ApiClient.convertToType(data['u_upc'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [Image]);
            }
            if (data.hasOwnProperty('product_options')) {
                obj['product_options'] = ApiClient.convertToType(data['product_options'], [ProductOption]);
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('weight_unit')) {
                obj['weight_unit'] = ApiClient.convertToType(data['weight_unit'], 'String');
            }
            if (data.hasOwnProperty('dimensions_unit')) {
                obj['dimensions_unit'] = ApiClient.convertToType(data['dimensions_unit'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('additional_fields')) {
                obj['additional_fields'] = ApiClient.convertToType(data['additional_fields'], Object);
            }
            if (data.hasOwnProperty('custom_fields')) {
                obj['custom_fields'] = ApiClient.convertToType(data['custom_fields'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MarketplaceProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MarketplaceProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['u_asin'] && !(typeof data['u_asin'] === 'string' || data['u_asin'] instanceof String)) {
            throw new Error("Expected the field `u_asin` to be a primitive type in the JSON string but got " + data['u_asin']);
        }
        // ensure the json data is a string
        if (data['u_ean'] && !(typeof data['u_ean'] === 'string' || data['u_ean'] instanceof String)) {
            throw new Error("Expected the field `u_ean` to be a primitive type in the JSON string but got " + data['u_ean']);
        }
        // ensure the json data is a string
        if (data['u_gtin'] && !(typeof data['u_gtin'] === 'string' || data['u_gtin'] instanceof String)) {
            throw new Error("Expected the field `u_gtin` to be a primitive type in the JSON string but got " + data['u_gtin']);
        }
        // ensure the json data is a string
        if (data['u_isbn'] && !(typeof data['u_isbn'] === 'string' || data['u_isbn'] instanceof String)) {
            throw new Error("Expected the field `u_isbn` to be a primitive type in the JSON string but got " + data['u_isbn']);
        }
        // ensure the json data is a string
        if (data['u_mpn'] && !(typeof data['u_mpn'] === 'string' || data['u_mpn'] instanceof String)) {
            throw new Error("Expected the field `u_mpn` to be a primitive type in the JSON string but got " + data['u_mpn']);
        }
        // ensure the json data is a string
        if (data['u_upc'] && !(typeof data['u_upc'] === 'string' || data['u_upc'] instanceof String)) {
            throw new Error("Expected the field `u_upc` to be a primitive type in the JSON string but got " + data['u_upc']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        if (data['images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['images'])) {
                throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
            }
            // validate the optional field `images` (array)
            for (const item of data['images']) {
                Image.validateJSON(item);
            };
        }
        if (data['product_options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['product_options'])) {
                throw new Error("Expected the field `product_options` to be an array in the JSON data but got " + data['product_options']);
            }
            // validate the optional field `product_options` (array)
            for (const item of data['product_options']) {
                ProductOption.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['brand'] && !(typeof data['brand'] === 'string' || data['brand'] instanceof String)) {
            throw new Error("Expected the field `brand` to be a primitive type in the JSON string but got " + data['brand']);
        }
        // ensure the json data is a string
        if (data['weight_unit'] && !(typeof data['weight_unit'] === 'string' || data['weight_unit'] instanceof String)) {
            throw new Error("Expected the field `weight_unit` to be a primitive type in the JSON string but got " + data['weight_unit']);
        }
        // ensure the json data is a string
        if (data['dimensions_unit'] && !(typeof data['dimensions_unit'] === 'string' || data['dimensions_unit'] instanceof String)) {
            throw new Error("Expected the field `dimensions_unit` to be a primitive type in the JSON string but got " + data['dimensions_unit']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
MarketplaceProduct.prototype['id'] = undefined;

/**
 * @member {String} type
 */
MarketplaceProduct.prototype['type'] = undefined;

/**
 * @member {String} u_asin
 */
MarketplaceProduct.prototype['u_asin'] = undefined;

/**
 * @member {String} u_ean
 */
MarketplaceProduct.prototype['u_ean'] = undefined;

/**
 * @member {String} u_gtin
 */
MarketplaceProduct.prototype['u_gtin'] = undefined;

/**
 * @member {String} u_isbn
 */
MarketplaceProduct.prototype['u_isbn'] = undefined;

/**
 * @member {String} u_mpn
 */
MarketplaceProduct.prototype['u_mpn'] = undefined;

/**
 * @member {String} u_upc
 */
MarketplaceProduct.prototype['u_upc'] = undefined;

/**
 * @member {String} name
 */
MarketplaceProduct.prototype['name'] = undefined;

/**
 * @member {String} description
 */
MarketplaceProduct.prototype['description'] = undefined;

/**
 * @member {String} url
 */
MarketplaceProduct.prototype['url'] = undefined;

/**
 * @member {Number} price
 */
MarketplaceProduct.prototype['price'] = undefined;

/**
 * @member {Array.<module:model/Image>} images
 */
MarketplaceProduct.prototype['images'] = undefined;

/**
 * @member {Array.<module:model/ProductOption>} product_options
 */
MarketplaceProduct.prototype['product_options'] = undefined;

/**
 * @member {String} manufacturer
 */
MarketplaceProduct.prototype['manufacturer'] = undefined;

/**
 * @member {String} brand
 */
MarketplaceProduct.prototype['brand'] = undefined;

/**
 * @member {Number} weight
 */
MarketplaceProduct.prototype['weight'] = undefined;

/**
 * @member {String} weight_unit
 */
MarketplaceProduct.prototype['weight_unit'] = undefined;

/**
 * @member {String} dimensions_unit
 */
MarketplaceProduct.prototype['dimensions_unit'] = undefined;

/**
 * @member {Number} width
 */
MarketplaceProduct.prototype['width'] = undefined;

/**
 * @member {Number} height
 */
MarketplaceProduct.prototype['height'] = undefined;

/**
 * @member {Number} length
 */
MarketplaceProduct.prototype['length'] = undefined;

/**
 * @member {Object} additional_fields
 */
MarketplaceProduct.prototype['additional_fields'] = undefined;

/**
 * @member {Object} custom_fields
 */
MarketplaceProduct.prototype['custom_fields'] = undefined;






export default MarketplaceProduct;

