/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelResponseMarketplaceProductFind from '../model/ModelResponseMarketplaceProductFind';

/**
* Marketplace service.
* @module api/MarketplaceApi
* @version 1.1
*/
export default class MarketplaceApi {

    /**
    * Constructs a new MarketplaceApi. 
    * @alias module:api/MarketplaceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the marketplaceProductFind operation.
     * @callback module:api/MarketplaceApi~marketplaceProductFindCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelResponseMarketplaceProductFind} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * marketplace.product.find
     * Search product in global catalog.
     * @param {Object} opts Optional parameters
     * @param {Number} [count = 10)] This parameter sets the entity amount that has to be retrieved. Max allowed count=250
     * @param {String} [pageCursor] Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
     * @param {String} [keyword] Defines search keyword
     * @param {String} [categoriesIds] Defines product add that is specified by comma-separated categories id
     * @param {String} [storeId] Store Id
     * @param {String} [asin] Amazon Standard Identification Number.
     * @param {String} [ean] European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
     * @param {String} [gtin] Global Trade Item Number. An GTIN is an identifier for trade items.
     * @param {String} [upc] Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
     * @param {String} [mpn] Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
     * @param {String} [isbn] International Standard Book Number. An ISBN is a unique identifier for books.
     * @param {String} [responseFields] Set this parameter in order to choose which entity fields you want to retrieve
     * @param {String} [params = 'force_all')] Set this parameter in order to choose which entity fields you want to retrieve
     * @param {String} [exclude] Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all
     * @param {module:api/MarketplaceApi~marketplaceProductFindCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelResponseMarketplaceProductFind}
     */
    marketplaceProductFind(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'count': opts['count'],
        'page_cursor': opts['pageCursor'],
        'keyword': opts['keyword'],
        'categories_ids': opts['categoriesIds'],
        'store_id': opts['storeId'],
        'asin': opts['asin'],
        'ean': opts['ean'],
        'gtin': opts['gtin'],
        'upc': opts['upc'],
        'mpn': opts['mpn'],
        'isbn': opts['isbn'],
        'response_fields': opts['responseFields'],
        'params': opts['params'],
        'exclude': opts['exclude']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['StoreKeyAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelResponseMarketplaceProductFind;
      return this.apiClient.callApi(
        '/marketplace.product.find.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
