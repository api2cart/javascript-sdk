/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelResponseBatchJobList from '../model/ModelResponseBatchJobList';
import ResponseBatchJobResult from '../model/ResponseBatchJobResult';

/**
* Batch service.
* @module api/BatchApi
* @version 1.1
*/
export default class BatchApi {

    /**
    * Constructs a new BatchApi. 
    * @alias module:api/BatchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the batchJobList operation.
     * @callback module:api/BatchApi~batchJobListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelResponseBatchJobList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * batch.job.list
     * Get list of recent jobs
     * @param {Object} opts Optional parameters
     * @param {Number} [count = 10)] This parameter sets the entity amount that has to be retrieved. Max allowed count=250
     * @param {String} [pageCursor] Used to retrieve entities via cursor-based pagination (it can't be used with any other filtering parameter)
     * @param {String} [createdFrom] Retrieve entities from their creation date
     * @param {String} [createdTo] Retrieve entities to their creation date
     * @param {String} [processedFrom] Retrieve entities according to their processing datetime
     * @param {String} [processedTo] Retrieve entities according to their processing datetime
     * @param {String} [ids] Filter batch jobs by ids
     * @param {String} [responseFields = '{return_code,return_message,pagination,result}')] Set this parameter in order to choose which entity fields you want to retrieve
     * @param {module:api/BatchApi~batchJobListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelResponseBatchJobList}
     */
    batchJobList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'count': opts['count'],
        'page_cursor': opts['pageCursor'],
        'created_from': opts['createdFrom'],
        'created_to': opts['createdTo'],
        'processed_from': opts['processedFrom'],
        'processed_to': opts['processedTo'],
        'ids': opts['ids'],
        'response_fields': opts['responseFields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['StoreKeyAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ModelResponseBatchJobList;
      return this.apiClient.callApi(
        '/batch.job.list.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the batchJobResult operation.
     * @callback module:api/BatchApi~batchJobResultCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseBatchJobResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * batch.job.result
     * Get job result data
     * @param {String} id Entity id
     * @param {module:api/BatchApi~batchJobResultCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseBatchJobResult}
     */
    batchJobResult(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling batchJobResult");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['StoreKeyAuth', 'ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ResponseBatchJobResult;
      return this.apiClient.callApi(
        '/batch.job.result.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
