/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api2CartOpenApi);
  }
}(this, function(expect, Api2CartOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api2CartOpenApi.AccountCartAdd();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountCartAdd', function() {
    it('should create an instance of AccountCartAdd', function() {
      // uncomment below and update the code to test AccountCartAdd
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be.a(Api2CartOpenApi.AccountCartAdd);
    });

    it('should have the property cartId (base name: "cart_id")', function() {
      // uncomment below and update the code to test the property cartId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property storeUrl (base name: "store_url")', function() {
      // uncomment below and update the code to test the property storeUrl
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bridgeUrl (base name: "bridge_url")', function() {
      // uncomment below and update the code to test the property bridgeUrl
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property storeRoot (base name: "store_root")', function() {
      // uncomment below and update the code to test the property storeRoot
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property storeKey (base name: "store_key")', function() {
      // uncomment below and update the code to test the property storeKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property validateVersion (base name: "validate_version")', function() {
      // uncomment below and update the code to test the property validateVersion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property verify (base name: "verify")', function() {
      // uncomment below and update the code to test the property verify
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property dbTablesPrefix (base name: "db_tables_prefix")', function() {
      // uncomment below and update the code to test the property dbTablesPrefix
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "user_agent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ftpHost (base name: "ftp_host")', function() {
      // uncomment below and update the code to test the property ftpHost
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ftpUser (base name: "ftp_user")', function() {
      // uncomment below and update the code to test the property ftpUser
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ftpPassword (base name: "ftp_password")', function() {
      // uncomment below and update the code to test the property ftpPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ftpPort (base name: "ftp_port")', function() {
      // uncomment below and update the code to test the property ftpPort
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ftpStoreDir (base name: "ftp_store_dir")', function() {
      // uncomment below and update the code to test the property ftpStoreDir
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property _3dcartPrivateKey (base name: "3dcart_private_key")', function() {
      // uncomment below and update the code to test the property _3dcartPrivateKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property _3dcartAccessToken (base name: "3dcart_access_token")', function() {
      // uncomment below and update the code to test the property _3dcartAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property _3dcartapiApiKey (base name: "3dcartapi_api_key")', function() {
      // uncomment below and update the code to test the property _3dcartapiApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property amazonSpClientId (base name: "amazon_sp_client_id")', function() {
      // uncomment below and update the code to test the property amazonSpClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property amazonSpClientSecret (base name: "amazon_sp_client_secret")', function() {
      // uncomment below and update the code to test the property amazonSpClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property amazonSpRefreshToken (base name: "amazon_sp_refresh_token")', function() {
      // uncomment below and update the code to test the property amazonSpRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property amazonSpAwsRegion (base name: "amazon_sp_aws_region")', function() {
      // uncomment below and update the code to test the property amazonSpAwsRegion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property amazonSpApiEnvironment (base name: "amazon_sp_api_environment")', function() {
      // uncomment below and update the code to test the property amazonSpApiEnvironment
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property amazonSellerId (base name: "amazon_seller_id")', function() {
      // uncomment below and update the code to test the property amazonSellerId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property aspdotnetstorefrontApiUser (base name: "aspdotnetstorefront_api_user")', function() {
      // uncomment below and update the code to test the property aspdotnetstorefrontApiUser
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property aspdotnetstorefrontApiPass (base name: "aspdotnetstorefront_api_pass")', function() {
      // uncomment below and update the code to test the property aspdotnetstorefrontApiPass
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcommerceapiAdminAccount (base name: "bigcommerceapi_admin_account")', function() {
      // uncomment below and update the code to test the property bigcommerceapiAdminAccount
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcommerceapiApiPath (base name: "bigcommerceapi_api_path")', function() {
      // uncomment below and update the code to test the property bigcommerceapiApiPath
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcommerceapiApiKey (base name: "bigcommerceapi_api_key")', function() {
      // uncomment below and update the code to test the property bigcommerceapiApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcommerceapiClientId (base name: "bigcommerceapi_client_id")', function() {
      // uncomment below and update the code to test the property bigcommerceapiClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcommerceapiAccessToken (base name: "bigcommerceapi_access_token")', function() {
      // uncomment below and update the code to test the property bigcommerceapiAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcommerceapiContext (base name: "bigcommerceapi_context")', function() {
      // uncomment below and update the code to test the property bigcommerceapiContext
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bolApiKey (base name: "bol_api_key")', function() {
      // uncomment below and update the code to test the property bolApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bolApiSecret (base name: "bol_api_secret")', function() {
      // uncomment below and update the code to test the property bolApiSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bolRetailerId (base name: "bol_retailer_id")', function() {
      // uncomment below and update the code to test the property bolRetailerId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcartelUserName (base name: "bigcartel_user_name")', function() {
      // uncomment below and update the code to test the property bigcartelUserName
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bigcartelPassword (base name: "bigcartel_password")', function() {
      // uncomment below and update the code to test the property bigcartelPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bricklinkConsumerKey (base name: "bricklink_consumer_key")', function() {
      // uncomment below and update the code to test the property bricklinkConsumerKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bricklinkConsumerSecret (base name: "bricklink_consumer_secret")', function() {
      // uncomment below and update the code to test the property bricklinkConsumerSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bricklinkToken (base name: "bricklink_token")', function() {
      // uncomment below and update the code to test the property bricklinkToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property bricklinkTokenSecret (base name: "bricklink_token_secret")', function() {
      // uncomment below and update the code to test the property bricklinkTokenSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property demandwareClientId (base name: "demandware_client_id")', function() {
      // uncomment below and update the code to test the property demandwareClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property demandwareApiPassword (base name: "demandware_api_password")', function() {
      // uncomment below and update the code to test the property demandwareApiPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property demandwareUserName (base name: "demandware_user_name")', function() {
      // uncomment below and update the code to test the property demandwareUserName
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property demandwareUserPassword (base name: "demandware_user_password")', function() {
      // uncomment below and update the code to test the property demandwareUserPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebayClientId (base name: "ebay_client_id")', function() {
      // uncomment below and update the code to test the property ebayClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebayClientSecret (base name: "ebay_client_secret")', function() {
      // uncomment below and update the code to test the property ebayClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebayRuname (base name: "ebay_runame")', function() {
      // uncomment below and update the code to test the property ebayRuname
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebayAccessToken (base name: "ebay_access_token")', function() {
      // uncomment below and update the code to test the property ebayAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebayRefreshToken (base name: "ebay_refresh_token")', function() {
      // uncomment below and update the code to test the property ebayRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebayEnvironment (base name: "ebay_environment")', function() {
      // uncomment below and update the code to test the property ebayEnvironment
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ebaySiteId (base name: "ebay_site_id")', function() {
      // uncomment below and update the code to test the property ebaySiteId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property walmartClientId (base name: "walmart_client_id")', function() {
      // uncomment below and update the code to test the property walmartClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property walmartClientSecret (base name: "walmart_client_secret")', function() {
      // uncomment below and update the code to test the property walmartClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property walmartEnvironment (base name: "walmart_environment")', function() {
      // uncomment below and update the code to test the property walmartEnvironment
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property walmartChannelType (base name: "walmart_channel_type")', function() {
      // uncomment below and update the code to test the property walmartChannelType
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property walmartRegion (base name: "walmart_region")', function() {
      // uncomment below and update the code to test the property walmartRegion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ecwidAcessToken (base name: "ecwid_acess_token")', function() {
      // uncomment below and update the code to test the property ecwidAcessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ecwidStoreId (base name: "ecwid_store_id")', function() {
      // uncomment below and update the code to test the property ecwidStoreId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property lazadaAppId (base name: "lazada_app_id")', function() {
      // uncomment below and update the code to test the property lazadaAppId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property lazadaAppSecret (base name: "lazada_app_secret")', function() {
      // uncomment below and update the code to test the property lazadaAppSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property lazadaRefreshToken (base name: "lazada_refresh_token")', function() {
      // uncomment below and update the code to test the property lazadaRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property lazadaRegion (base name: "lazada_region")', function() {
      // uncomment below and update the code to test the property lazadaRegion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property lightspeedApiKey (base name: "lightspeed_api_key")', function() {
      // uncomment below and update the code to test the property lightspeedApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property lightspeedApiSecret (base name: "lightspeed_api_secret")', function() {
      // uncomment below and update the code to test the property lightspeedApiSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property etsyKeystring (base name: "etsy_keystring")', function() {
      // uncomment below and update the code to test the property etsyKeystring
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property etsySharedSecret (base name: "etsy_shared_secret")', function() {
      // uncomment below and update the code to test the property etsySharedSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property etsyAccessToken (base name: "etsy_access_token")', function() {
      // uncomment below and update the code to test the property etsyAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property etsyTokenSecret (base name: "etsy_token_secret")', function() {
      // uncomment below and update the code to test the property etsyTokenSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property etsyClientId (base name: "etsy_client_id")', function() {
      // uncomment below and update the code to test the property etsyClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property etsyRefreshToken (base name: "etsy_refresh_token")', function() {
      // uncomment below and update the code to test the property etsyRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property facebookAppId (base name: "facebook_app_id")', function() {
      // uncomment below and update the code to test the property facebookAppId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property facebookAppSecret (base name: "facebook_app_secret")', function() {
      // uncomment below and update the code to test the property facebookAppSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property facebookAccessToken (base name: "facebook_access_token")', function() {
      // uncomment below and update the code to test the property facebookAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property facebookBusinessId (base name: "facebook_business_id")', function() {
      // uncomment below and update the code to test the property facebookBusinessId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property netoApiKey (base name: "neto_api_key")', function() {
      // uncomment below and update the code to test the property netoApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property netoApiUsername (base name: "neto_api_username")', function() {
      // uncomment below and update the code to test the property netoApiUsername
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shoplineAccessToken (base name: "shopline_access_token")', function() {
      // uncomment below and update the code to test the property shoplineAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shoplineAppKey (base name: "shopline_app_key")', function() {
      // uncomment below and update the code to test the property shoplineAppKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shoplineAppSecret (base name: "shopline_app_secret")', function() {
      // uncomment below and update the code to test the property shoplineAppSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shoplineSharedSecret (base name: "shopline_shared_secret")', function() {
      // uncomment below and update the code to test the property shoplineSharedSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopifyAccessToken (base name: "shopify_access_token")', function() {
      // uncomment below and update the code to test the property shopifyAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopifyApiKey (base name: "shopify_api_key")', function() {
      // uncomment below and update the code to test the property shopifyApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopifyApiPassword (base name: "shopify_api_password")', function() {
      // uncomment below and update the code to test the property shopifyApiPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopifySharedSecret (base name: "shopify_shared_secret")', function() {
      // uncomment below and update the code to test the property shopifySharedSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopeePartnerId (base name: "shopee_partner_id")', function() {
      // uncomment below and update the code to test the property shopeePartnerId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopeePartnerKey (base name: "shopee_partner_key")', function() {
      // uncomment below and update the code to test the property shopeePartnerKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopeeShopId (base name: "shopee_shop_id")', function() {
      // uncomment below and update the code to test the property shopeeShopId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopeeRefreshToken (base name: "shopee_refresh_token")', function() {
      // uncomment below and update the code to test the property shopeeRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopeeRegion (base name: "shopee_region")', function() {
      // uncomment below and update the code to test the property shopeeRegion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopeeEnvironment (base name: "shopee_environment")', function() {
      // uncomment below and update the code to test the property shopeeEnvironment
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shoplazzaAccessToken (base name: "shoplazza_access_token")', function() {
      // uncomment below and update the code to test the property shoplazzaAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shoplazzaSharedSecret (base name: "shoplazza_shared_secret")', function() {
      // uncomment below and update the code to test the property shoplazzaSharedSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopwareAccessKey (base name: "shopware_access_key")', function() {
      // uncomment below and update the code to test the property shopwareAccessKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property unasApiKey (base name: "unas_api_key")', function() {
      // uncomment below and update the code to test the property unasApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopwareApiKey (base name: "shopware_api_key")', function() {
      // uncomment below and update the code to test the property shopwareApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property shopwareApiSecret (base name: "shopware_api_secret")', function() {
      // uncomment below and update the code to test the property shopwareApiSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property mivaAccessToken (base name: "miva_access_token")', function() {
      // uncomment below and update the code to test the property mivaAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property mivaSignature (base name: "miva_signature")', function() {
      // uncomment below and update the code to test the property mivaSignature
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiendanubeUserId (base name: "tiendanube_user_id")', function() {
      // uncomment below and update the code to test the property tiendanubeUserId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiendanubeAccessToken (base name: "tiendanube_access_token")', function() {
      // uncomment below and update the code to test the property tiendanubeAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiendanubeClientSecret (base name: "tiendanube_client_secret")', function() {
      // uncomment below and update the code to test the property tiendanubeClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property volusionLogin (base name: "volusion_login")', function() {
      // uncomment below and update the code to test the property volusionLogin
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property volusionPassword (base name: "volusion_password")', function() {
      // uncomment below and update the code to test the property volusionPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property hybrisClientId (base name: "hybris_client_id")', function() {
      // uncomment below and update the code to test the property hybrisClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property hybrisClientSecret (base name: "hybris_client_secret")', function() {
      // uncomment below and update the code to test the property hybrisClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property hybrisUsername (base name: "hybris_username")', function() {
      // uncomment below and update the code to test the property hybrisUsername
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property hybrisPassword (base name: "hybris_password")', function() {
      // uncomment below and update the code to test the property hybrisPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property hybrisWebsites (base name: "hybris_websites")', function() {
      // uncomment below and update the code to test the property hybrisWebsites
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squareClientId (base name: "square_client_id")', function() {
      // uncomment below and update the code to test the property squareClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squareClientSecret (base name: "square_client_secret")', function() {
      // uncomment below and update the code to test the property squareClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squareRefreshToken (base name: "square_refresh_token")', function() {
      // uncomment below and update the code to test the property squareRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squarespaceApiKey (base name: "squarespace_api_key")', function() {
      // uncomment below and update the code to test the property squarespaceApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squarespaceClientId (base name: "squarespace_client_id")', function() {
      // uncomment below and update the code to test the property squarespaceClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squarespaceClientSecret (base name: "squarespace_client_secret")', function() {
      // uncomment below and update the code to test the property squarespaceClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squarespaceAccessToken (base name: "squarespace_access_token")', function() {
      // uncomment below and update the code to test the property squarespaceAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property squarespaceRefreshToken (base name: "squarespace_refresh_token")', function() {
      // uncomment below and update the code to test the property squarespaceRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property commercehqApiKey (base name: "commercehq_api_key")', function() {
      // uncomment below and update the code to test the property commercehqApiKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property commercehqApiPassword (base name: "commercehq_api_password")', function() {
      // uncomment below and update the code to test the property commercehqApiPassword
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property wcConsumerKey (base name: "wc_consumer_key")', function() {
      // uncomment below and update the code to test the property wcConsumerKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property wcConsumerSecret (base name: "wc_consumer_secret")', function() {
      // uncomment below and update the code to test the property wcConsumerSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property magentoConsumerKey (base name: "magento_consumer_key")', function() {
      // uncomment below and update the code to test the property magentoConsumerKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property magentoConsumerSecret (base name: "magento_consumer_secret")', function() {
      // uncomment below and update the code to test the property magentoConsumerSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property magentoAccessToken (base name: "magento_access_token")', function() {
      // uncomment below and update the code to test the property magentoAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property magentoTokenSecret (base name: "magento_token_secret")', function() {
      // uncomment below and update the code to test the property magentoTokenSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property prestashopWebserviceKey (base name: "prestashop_webservice_key")', function() {
      // uncomment below and update the code to test the property prestashopWebserviceKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property wixAppId (base name: "wix_app_id")', function() {
      // uncomment below and update the code to test the property wixAppId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property wixAppSecretKey (base name: "wix_app_secret_key")', function() {
      // uncomment below and update the code to test the property wixAppSecretKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property wixInstanceId (base name: "wix_instance_id")', function() {
      // uncomment below and update the code to test the property wixInstanceId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property wixRefreshToken (base name: "wix_refresh_token")', function() {
      // uncomment below and update the code to test the property wixRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property mercadoLibreAppId (base name: "mercado_libre_app_id")', function() {
      // uncomment below and update the code to test the property mercadoLibreAppId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property mercadoLibreAppSecretKey (base name: "mercado_libre_app_secret_key")', function() {
      // uncomment below and update the code to test the property mercadoLibreAppSecretKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property mercadoLibreRefreshToken (base name: "mercado_libre_refresh_token")', function() {
      // uncomment below and update the code to test the property mercadoLibreRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zidClientId (base name: "zid_client_id")', function() {
      // uncomment below and update the code to test the property zidClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zidClientSecret (base name: "zid_client_secret")', function() {
      // uncomment below and update the code to test the property zidClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zidAccessToken (base name: "zid_access_token")', function() {
      // uncomment below and update the code to test the property zidAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zidAuthorization (base name: "zid_authorization")', function() {
      // uncomment below and update the code to test the property zidAuthorization
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zidRefreshToken (base name: "zid_refresh_token")', function() {
      // uncomment below and update the code to test the property zidRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property flipkartClientId (base name: "flipkart_client_id")', function() {
      // uncomment below and update the code to test the property flipkartClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property flipkartClientSecret (base name: "flipkart_client_secret")', function() {
      // uncomment below and update the code to test the property flipkartClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property allegroClientId (base name: "allegro_client_id")', function() {
      // uncomment below and update the code to test the property allegroClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property allegroClientSecret (base name: "allegro_client_secret")', function() {
      // uncomment below and update the code to test the property allegroClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property allegroAccessToken (base name: "allegro_access_token")', function() {
      // uncomment below and update the code to test the property allegroAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property allegroRefreshToken (base name: "allegro_refresh_token")', function() {
      // uncomment below and update the code to test the property allegroRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property allegroEnvironment (base name: "allegro_environment")', function() {
      // uncomment below and update the code to test the property allegroEnvironment
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zohoClientId (base name: "zoho_client_id")', function() {
      // uncomment below and update the code to test the property zohoClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zohoClientSecret (base name: "zoho_client_secret")', function() {
      // uncomment below and update the code to test the property zohoClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zohoRefreshToken (base name: "zoho_refresh_token")', function() {
      // uncomment below and update the code to test the property zohoRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property zohoRegion (base name: "zoho_region")', function() {
      // uncomment below and update the code to test the property zohoRegion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ottoClientId (base name: "otto_client_id")', function() {
      // uncomment below and update the code to test the property ottoClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ottoClientSecret (base name: "otto_client_secret")', function() {
      // uncomment below and update the code to test the property ottoClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ottoAppId (base name: "otto_app_id")', function() {
      // uncomment below and update the code to test the property ottoAppId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ottoRefreshToken (base name: "otto_refresh_token")', function() {
      // uncomment below and update the code to test the property ottoRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ottoEnvironment (base name: "otto_environment")', function() {
      // uncomment below and update the code to test the property ottoEnvironment
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property ottoAccessToken (base name: "otto_access_token")', function() {
      // uncomment below and update the code to test the property ottoAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiktokshopAppKey (base name: "tiktokshop_app_key")', function() {
      // uncomment below and update the code to test the property tiktokshopAppKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiktokshopAppSecret (base name: "tiktokshop_app_secret")', function() {
      // uncomment below and update the code to test the property tiktokshopAppSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiktokshopRefreshToken (base name: "tiktokshop_refresh_token")', function() {
      // uncomment below and update the code to test the property tiktokshopRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property tiktokshopAccessToken (base name: "tiktokshop_access_token")', function() {
      // uncomment below and update the code to test the property tiktokshopAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property sallaClientId (base name: "salla_client_id")', function() {
      // uncomment below and update the code to test the property sallaClientId
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property sallaClientSecret (base name: "salla_client_secret")', function() {
      // uncomment below and update the code to test the property sallaClientSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property sallaRefreshToken (base name: "salla_refresh_token")', function() {
      // uncomment below and update the code to test the property sallaRefreshToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property sallaAccessToken (base name: "salla_access_token")', function() {
      // uncomment below and update the code to test the property sallaAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property temuAppKey (base name: "temu_app_key")', function() {
      // uncomment below and update the code to test the property temuAppKey
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property temuAppSecret (base name: "temu_app_secret")', function() {
      // uncomment below and update the code to test the property temuAppSecret
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property temuAccessToken (base name: "temu_access_token")', function() {
      // uncomment below and update the code to test the property temuAccessToken
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

    it('should have the property temuRegion (base name: "temu_region")', function() {
      // uncomment below and update the code to test the property temuRegion
      //var instance = new Api2CartOpenApi.AccountCartAdd();
      //expect(instance).to.be();
    });

  });

}));
