/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api2CartOpenApi);
  }
}(this, function(expect, Api2CartOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api2CartOpenApi.CartCreate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CartCreate', function() {
    it('should create an instance of CartCreate', function() {
      // uncomment below and update the code to test CartCreate
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be.a(Api2CartOpenApi.CartCreate);
    });

    it('should have the property cartId (base name: "cart_id")', function() {
      // uncomment below and update the code to test the property cartId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property storeUrl (base name: "store_url")', function() {
      // uncomment below and update the code to test the property storeUrl
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property bridgeUrl (base name: "bridge_url")', function() {
      // uncomment below and update the code to test the property bridgeUrl
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property storeRoot (base name: "store_root")', function() {
      // uncomment below and update the code to test the property storeRoot
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property storeKey (base name: "store_key")', function() {
      // uncomment below and update the code to test the property storeKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property sharedSecret (base name: "shared_secret")', function() {
      // uncomment below and update the code to test the property sharedSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property validateVersion (base name: "validate_version")', function() {
      // uncomment below and update the code to test the property validateVersion
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property verify (base name: "verify")', function() {
      // uncomment below and update the code to test the property verify
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property dbTablesPrefix (base name: "db_tables_prefix")', function() {
      // uncomment below and update the code to test the property dbTablesPrefix
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "user_agent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ftpHost (base name: "ftp_host")', function() {
      // uncomment below and update the code to test the property ftpHost
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ftpUser (base name: "ftp_user")', function() {
      // uncomment below and update the code to test the property ftpUser
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ftpPassword (base name: "ftp_password")', function() {
      // uncomment below and update the code to test the property ftpPassword
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ftpPort (base name: "ftp_port")', function() {
      // uncomment below and update the code to test the property ftpPort
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ftpStoreDir (base name: "ftp_store_dir")', function() {
      // uncomment below and update the code to test the property ftpStoreDir
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiKey3dcart (base name: "apiKey_3dcart")', function() {
      // uncomment below and update the code to test the property apiKey3dcart
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property adminAccount (base name: "AdminAccount")', function() {
      // uncomment below and update the code to test the property adminAccount
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiPath (base name: "ApiPath")', function() {
      // uncomment below and update the code to test the property apiPath
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiKeyBigcommerce (base name: "ApiKey_Bigcommerce")', function() {
      // uncomment below and update the code to test the property apiKeyBigcommerce
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property accessToken (base name: "accessToken")', function() {
      // uncomment below and update the code to test the property accessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property context (base name: "context")', function() {
      // uncomment below and update the code to test the property context
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property accessToken (base name: "access_token")', function() {
      // uncomment below and update the code to test the property accessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiKeyShopify (base name: "apiKey_shopify")', function() {
      // uncomment below and update the code to test the property apiKeyShopify
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiPassword (base name: "apiPassword")', function() {
      // uncomment below and update the code to test the property apiPassword
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property accessTokenShopify (base name: "accessToken_shopify")', function() {
      // uncomment below and update the code to test the property accessTokenShopify
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiKey (base name: "apiKey")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiUsername (base name: "apiUsername")', function() {
      // uncomment below and update the code to test the property apiUsername
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property encryptedPassword (base name: "EncryptedPassword")', function() {
      // uncomment below and update the code to test the property encryptedPassword
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property login (base name: "Login")', function() {
      // uncomment below and update the code to test the property login
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiUserAdnsf (base name: "apiUser_adnsf")', function() {
      // uncomment below and update the code to test the property apiUserAdnsf
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property apiPass (base name: "apiPass")', function() {
      // uncomment below and update the code to test the property apiPass
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property privateKey (base name: "privateKey")', function() {
      // uncomment below and update the code to test the property privateKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property appToken (base name: "appToken")', function() {
      // uncomment below and update the code to test the property appToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property etsyKeystring (base name: "etsy_keystring")', function() {
      // uncomment below and update the code to test the property etsyKeystring
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property etsySharedSecret (base name: "etsy_shared_secret")', function() {
      // uncomment below and update the code to test the property etsySharedSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property tokenSecret (base name: "tokenSecret")', function() {
      // uncomment below and update the code to test the property tokenSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property etsyClientId (base name: "etsy_client_id")', function() {
      // uncomment below and update the code to test the property etsyClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property etsyRefreshToken (base name: "etsy_refresh_token")', function() {
      // uncomment below and update the code to test the property etsyRefreshToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebayClientId (base name: "ebay_client_id")', function() {
      // uncomment below and update the code to test the property ebayClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebayClientSecret (base name: "ebay_client_secret")', function() {
      // uncomment below and update the code to test the property ebayClientSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebayRuname (base name: "ebay_runame")', function() {
      // uncomment below and update the code to test the property ebayRuname
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebayAccessToken (base name: "ebay_access_token")', function() {
      // uncomment below and update the code to test the property ebayAccessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebayRefreshToken (base name: "ebay_refresh_token")', function() {
      // uncomment below and update the code to test the property ebayRefreshToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebayEnvironment (base name: "ebay_environment")', function() {
      // uncomment below and update the code to test the property ebayEnvironment
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property ebaySiteId (base name: "ebay_site_id")', function() {
      // uncomment below and update the code to test the property ebaySiteId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property dwClientId (base name: "dw_client_id")', function() {
      // uncomment below and update the code to test the property dwClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property dwApiPass (base name: "dw_api_pass")', function() {
      // uncomment below and update the code to test the property dwApiPass
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property demandwareUserName (base name: "demandware_user_name")', function() {
      // uncomment below and update the code to test the property demandwareUserName
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property demandwareUserPassword (base name: "demandware_user_password")', function() {
      // uncomment below and update the code to test the property demandwareUserPassword
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "store_id")', function() {
      // uncomment below and update the code to test the property storeId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property sellerId (base name: "seller_id")', function() {
      // uncomment below and update the code to test the property sellerId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property hybrisClientId (base name: "hybris_client_id")', function() {
      // uncomment below and update the code to test the property hybrisClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property hybrisClientSecret (base name: "hybris_client_secret")', function() {
      // uncomment below and update the code to test the property hybrisClientSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property hybrisUsername (base name: "hybris_username")', function() {
      // uncomment below and update the code to test the property hybrisUsername
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property hybrisPassword (base name: "hybris_password")', function() {
      // uncomment below and update the code to test the property hybrisPassword
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property hybrisWebsites (base name: "hybris_websites")', function() {
      // uncomment below and update the code to test the property hybrisWebsites
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property walmartClientId (base name: "walmart_client_id")', function() {
      // uncomment below and update the code to test the property walmartClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property walmartClientSecret (base name: "walmart_client_secret")', function() {
      // uncomment below and update the code to test the property walmartClientSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property walmartEnvironment (base name: "walmart_environment")', function() {
      // uncomment below and update the code to test the property walmartEnvironment
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property walmartChannelType (base name: "walmart_channel_type")', function() {
      // uncomment below and update the code to test the property walmartChannelType
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property walmartRegion (base name: "walmart_region")', function() {
      // uncomment below and update the code to test the property walmartRegion
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property lightspeedApiKey (base name: "lightspeed_api_key")', function() {
      // uncomment below and update the code to test the property lightspeedApiKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property lightspeedApiSecret (base name: "lightspeed_api_secret")', function() {
      // uncomment below and update the code to test the property lightspeedApiSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property shoplazzaAccessToken (base name: "shoplazza_access_token")', function() {
      // uncomment below and update the code to test the property shoplazzaAccessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property shoplazzaSharedSecret (base name: "shoplazza_shared_secret")', function() {
      // uncomment below and update the code to test the property shoplazzaSharedSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property shopwareAccessKey (base name: "shopware_access_key")', function() {
      // uncomment below and update the code to test the property shopwareAccessKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property shopwareApiKey (base name: "shopware_api_key")', function() {
      // uncomment below and update the code to test the property shopwareApiKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property shopwareApiSecret (base name: "shopware_api_secret")', function() {
      // uncomment below and update the code to test the property shopwareApiSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property commercehqApiKey (base name: "commercehq_api_key")', function() {
      // uncomment below and update the code to test the property commercehqApiKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property commercehqApiPassword (base name: "commercehq_api_password")', function() {
      // uncomment below and update the code to test the property commercehqApiPassword
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property _3dcartPrivateKey (base name: "3dcart_private_key")', function() {
      // uncomment below and update the code to test the property _3dcartPrivateKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property _3dcartAccessToken (base name: "3dcart_access_token")', function() {
      // uncomment below and update the code to test the property _3dcartAccessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property wcConsumerKey (base name: "wc_consumer_key")', function() {
      // uncomment below and update the code to test the property wcConsumerKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property wcConsumerSecret (base name: "wc_consumer_secret")', function() {
      // uncomment below and update the code to test the property wcConsumerSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property magentoConsumerKey (base name: "magento_consumer_key")', function() {
      // uncomment below and update the code to test the property magentoConsumerKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property magentoConsumerSecret (base name: "magento_consumer_secret")', function() {
      // uncomment below and update the code to test the property magentoConsumerSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property magentoAccessToken (base name: "magento_access_token")', function() {
      // uncomment below and update the code to test the property magentoAccessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property magentoTokenSecret (base name: "magento_token_secret")', function() {
      // uncomment below and update the code to test the property magentoTokenSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property prestashopWebserviceKey (base name: "prestashop_webservice_key")', function() {
      // uncomment below and update the code to test the property prestashopWebserviceKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property wixAppId (base name: "wix_app_id")', function() {
      // uncomment below and update the code to test the property wixAppId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property wixAppSecretKey (base name: "wix_app_secret_key")', function() {
      // uncomment below and update the code to test the property wixAppSecretKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property wixInstanceId (base name: "wix_instance_id")', function() {
      // uncomment below and update the code to test the property wixInstanceId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property wixRefreshToken (base name: "wix_refresh_token")', function() {
      // uncomment below and update the code to test the property wixRefreshToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property mercadoLibreAppId (base name: "mercado_libre_app_id")', function() {
      // uncomment below and update the code to test the property mercadoLibreAppId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property mercadoLibreAppSecretKey (base name: "mercado_libre_app_secret_key")', function() {
      // uncomment below and update the code to test the property mercadoLibreAppSecretKey
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property mercadoLibreRefreshToken (base name: "mercado_libre_refresh_token")', function() {
      // uncomment below and update the code to test the property mercadoLibreRefreshToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property zidClientId (base name: "zid_client_id")', function() {
      // uncomment below and update the code to test the property zidClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property zidClientSecret (base name: "zid_client_secret")', function() {
      // uncomment below and update the code to test the property zidClientSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property zidAccessToken (base name: "zid_access_token")', function() {
      // uncomment below and update the code to test the property zidAccessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property zidAuthorization (base name: "zid_authorization")', function() {
      // uncomment below and update the code to test the property zidAuthorization
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property zidRefreshToken (base name: "zid_refresh_token")', function() {
      // uncomment below and update the code to test the property zidRefreshToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property flipkartClientId (base name: "flipkart_client_id")', function() {
      // uncomment below and update the code to test the property flipkartClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property flipkartClientSecret (base name: "flipkart_client_secret")', function() {
      // uncomment below and update the code to test the property flipkartClientSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property allegroClientId (base name: "allegro_client_id")', function() {
      // uncomment below and update the code to test the property allegroClientId
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property allegroClientSecret (base name: "allegro_client_secret")', function() {
      // uncomment below and update the code to test the property allegroClientSecret
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property allegroAccessToken (base name: "allegro_access_token")', function() {
      // uncomment below and update the code to test the property allegroAccessToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property allegroRefreshToken (base name: "allegro_refresh_token")', function() {
      // uncomment below and update the code to test the property allegroRefreshToken
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

    it('should have the property allegroEnvironment (base name: "allegro_environment")', function() {
      // uncomment below and update the code to test the property allegroEnvironment
      //var instance = new Api2CartOpenApi.CartCreate();
      //expect(instance).to.be();
    });

  });

}));
